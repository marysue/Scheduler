[{"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/index.js":"1","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/App.js":"2","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/configureStore.js":"3","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/Theme.js":"4","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/UsersList.js":"5","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/User.js":"6","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/NavBar.js":"7","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/services/auth.js":"8","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/ProtectedRoute.js":"9","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LoginForm.js":"10","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/SignUpForm.js":"11","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LogoutButton.js":"12","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/authentication.js":"13","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/config.js":"14","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/SplashPage.js":"15","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/Calendar.js":"16","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/header.js":"17","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/styles.js":"18","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/build.js":"19","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/blocked.js":"20","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/placement.js":"21","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/company.js":"22","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/contractor.js":"23","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/DayCard.js":"24","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/GridComponent.js":"25","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/BlockedCard.js":"26","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/utils/utils.js":"27","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/agencyInfo.js":"28","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/agencyCompanyPlacements.js":"29","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/agencyContractorPlacements.js":"30","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/NavBar.js":"31","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/ShowLoginNav.js":"32","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/TabNav.js":"33","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/LoggedOutTabNav.js":"34","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/ShowLogoutNav.js":"35","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/Logo.js":"36","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/TabNavAgency.js":"37","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/TabNavContractor.js":"38","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/TabNavCompany.js":"39","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/Logout.js":"40","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyCompanies.js":"41","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyCompanyTable.js":"42","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyContractors.js":"43","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyContractorsTable.js":"44","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyContractorPlacements.js":"45","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyContractorPlacementTable.js":"46","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyCompanyPlacements.js":"47","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyCompanyPlacementTable.js":"48","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyView.js":"49","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyPlacementTable.js":"50","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Company/CompanyPlacementTable.js":"51","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Company/CompanyView.js":"52","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Company/CompanyAddPlacement.js":"53","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Company/CompanyPlacementPickerTable.js":"54","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Company/CompanyInfo.js":"55","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Contractor/ContractorView.js":"56","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Contractor/ContractorPlacementTable.js":"57","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Contractor/ContractorInfo.js":"58"},{"size":434,"mtime":1607535137719,"results":"59","hashOfConfig":"60"},{"size":6158,"mtime":1609107051716,"results":"61","hashOfConfig":"60"},{"size":949,"mtime":1609093235223,"results":"62","hashOfConfig":"60"},{"size":548,"mtime":1607535137702,"results":"63","hashOfConfig":"60"},{"size":719,"mtime":1607535137711,"results":"64","hashOfConfig":"60"},{"size":832,"mtime":1607535137710,"results":"65","hashOfConfig":"60"},{"size":3606,"mtime":1609107313815,"results":"66","hashOfConfig":"60"},{"size":1016,"mtime":1607018667135,"results":"67","hashOfConfig":"60"},{"size":381,"mtime":1607535137714,"results":"68","hashOfConfig":"60"},{"size":16817,"mtime":1609104921916,"results":"69","hashOfConfig":"60"},{"size":8343,"mtime":1608573478522,"results":"70","hashOfConfig":"60"},{"size":2867,"mtime":1609104722916,"results":"71","hashOfConfig":"60"},{"size":7118,"mtime":1608573478525,"results":"72","hashOfConfig":"60"},{"size":82,"mtime":1607535137717,"results":"73","hashOfConfig":"60"},{"size":3370,"mtime":1609099834365,"results":"74","hashOfConfig":"60"},{"size":10270,"mtime":1609107622009,"results":"75","hashOfConfig":"60"},{"size":1576,"mtime":1609105931776,"results":"76","hashOfConfig":"60"},{"size":436,"mtime":1607285155533,"results":"77","hashOfConfig":"60"},{"size":557,"mtime":1607535137704,"results":"78","hashOfConfig":"60"},{"size":3516,"mtime":1608573628209,"results":"79","hashOfConfig":"60"},{"size":8152,"mtime":1609093235224,"results":"80","hashOfConfig":"60"},{"size":8986,"mtime":1609093235223,"results":"81","hashOfConfig":"60"},{"size":10001,"mtime":1609093235224,"results":"82","hashOfConfig":"60"},{"size":3997,"mtime":1609093235215,"results":"83","hashOfConfig":"60"},{"size":1932,"mtime":1608423200675,"results":"84","hashOfConfig":"60"},{"size":1225,"mtime":1608841235204,"results":"85","hashOfConfig":"60"},{"size":767,"mtime":1609093235224,"results":"86","hashOfConfig":"60"},{"size":2208,"mtime":1609093235222,"results":"87","hashOfConfig":"60"},{"size":2531,"mtime":1609093235222,"results":"88","hashOfConfig":"60"},{"size":2755,"mtime":1609093235222,"results":"89","hashOfConfig":"60"},{"size":5013,"mtime":1609108235498,"results":"90","hashOfConfig":"60"},{"size":2052,"mtime":1609100978744,"results":"91","hashOfConfig":"60"},{"size":2643,"mtime":1609101151870,"results":"92","hashOfConfig":"60"},{"size":1655,"mtime":1609100674842,"results":"93","hashOfConfig":"60"},{"size":2309,"mtime":1609096058412,"results":"94","hashOfConfig":"60"},{"size":110,"mtime":1609095074410,"results":"95","hashOfConfig":"60"},{"size":2181,"mtime":1609106317267,"results":"96","hashOfConfig":"60"},{"size":1744,"mtime":1609106563196,"results":"97","hashOfConfig":"60"},{"size":1749,"mtime":1609107177490,"results":"98","hashOfConfig":"60"},{"size":2590,"mtime":1609104214178,"results":"99","hashOfConfig":"60"},{"size":829,"mtime":1609105343589,"results":"100","hashOfConfig":"60"},{"size":10906,"mtime":1609105376010,"results":"101","hashOfConfig":"60"},{"size":239,"mtime":1609105235776,"results":"102","hashOfConfig":"60"},{"size":10868,"mtime":1609109179091,"results":"103","hashOfConfig":"60"},{"size":2146,"mtime":1609105387024,"results":"104","hashOfConfig":"60"},{"size":10537,"mtime":1609105098171,"results":"105","hashOfConfig":"60"},{"size":1582,"mtime":1609105362080,"results":"106","hashOfConfig":"60"},{"size":11056,"mtime":1609105097679,"results":"107","hashOfConfig":"60"},{"size":3640,"mtime":1609106229572,"results":"108","hashOfConfig":"60"},{"size":10695,"mtime":1609105098781,"results":"109","hashOfConfig":"60"},{"size":10248,"mtime":1609105582061,"results":"110","hashOfConfig":"60"},{"size":5318,"mtime":1609107110336,"results":"111","hashOfConfig":"60"},{"size":10248,"mtime":1609105811442,"results":"112","hashOfConfig":"60"},{"size":13899,"mtime":1609105715329,"results":"113","hashOfConfig":"60"},{"size":12413,"mtime":1609105696526,"results":"114","hashOfConfig":"60"},{"size":5541,"mtime":1609106843857,"results":"115","hashOfConfig":"60"},{"size":10999,"mtime":1609105999138,"results":"116","hashOfConfig":"60"},{"size":13214,"mtime":1609106045757,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"njrkyg",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"120"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"120"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"120"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"120"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"120"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"120"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"120"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"120"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"120"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"120"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"120"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"120"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"120"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"120"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"120"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"120"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"120"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/index.js",[],["259","260"],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/App.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/configureStore.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/Theme.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/UsersList.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/User.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/NavBar.js",["261"],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/services/auth.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/ProtectedRoute.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LoginForm.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/SignUpForm.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LogoutButton.js",["262"],"import React from \"react\";\nimport { Redirect } from 'react-router-dom';\n//import { logout } from \"../../services/auth\";\nimport { logout } from '../../store/authentication';\nimport { useDispatch } from 'react-redux';\nimport { removeUserId, removeUserName, removeUserEmail, removeToken, removeUserType } from '../../store/authentication';\nimport { removeCompanyLocations, removeCompanyId, removeCompanyName, removeCompanyContactName, removeCompanyPhone, removeCompanyEmail, removeCompanyAddr1, removeCompanyAddr2, removeCompanyCity, removeCompanyState, removeCompanyZip } from '../../store/company'\nimport { removeAvailableContractors, removeContractorId, removeStaffType, removeContractorName, removeContractorPhone, removeContractorEmail, removeContractorAddr1, removeContractorAddr2, removeContractorCity, removeContractorState, removeContractorZip } from '../../store/contractor'\nimport { removePlacementInfo, removePlacementDates } from '../../store/placement'\n\nconst LogoutButton = ({setAuthenticated}) => {\n  console.log(\"Entered LogoutButton\")\n  const dispatch = useDispatch();\n\n  const onLogout = async (e) => {\n    console.log(\"onLogout...\")\n    const retVal = await logout();\n    if (!retVal.errors) {\n\n    setAuthenticated(false);\n\n    dispatch(removeUserId());\n    dispatch(removeUserName());\n    dispatch(removeUserEmail());\n    dispatch(removeToken());\n    dispatch(removeUserType());\n\n    dispatch(removeCompanyId());\n    dispatch(removeCompanyName());\n    dispatch(removeCompanyContactName());\n    dispatch(removeCompanyPhone());\n    dispatch(removeCompanyEmail());\n    dispatch(removeCompanyAddr1());\n    dispatch(removeCompanyAddr2());\n    dispatch(removeCompanyCity());\n    dispatch(removeCompanyState());\n    dispatch(removeCompanyZip());\n    dispatch(removeCompanyLocations());\n\n    dispatch(removeContractorId());\n    dispatch(removeStaffType());\n    dispatch(removeContractorName());\n    dispatch(removeContractorPhone());\n    dispatch(removeContractorEmail());\n    dispatch(removeContractorAddr1());\n    dispatch(removeContractorAddr2());\n    dispatch(removeContractorCity());\n    dispatch(removeContractorState());\n    dispatch(removeContractorZip());\n    dispatch(removeAvailableContractors());\n\n    dispatch(removePlacementDates());\n    dispatch(removePlacementInfo());\n\n    window.localStorage.removeItem(\"currentUser\")\n    window.localStorage.removeItem(\"userId\")\n    window.localStorage.removeItem(\"contractorId\")\n    window.localStorage.removeItem(\"companyId\")\n    window.localStorage.removeItem(\"agencyId\");\n    window.localStorage.removeItem(\"userType\");\n\n    //return <Redirect to='/splashPage'></Redirect>\n    window.location.replace(\"/splashPage\")\n    } else {\n      console.log(\"LogoutButton:  Errors logging out: \", retVal.errors);\n    }\n  };\n\n  return <button onClick={onLogout}>Logout</button>;\n};\n\nexport default LogoutButton;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/authentication.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/config.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/SplashPage.js",["263","264","265"],"import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, makeStyles } from '@material-ui/core';\nimport Login from './auth/LoginForm'\nimport SignUp from './auth/SignUpForm'\n\nconst SplashPage = () => {\n    console.log(\"Entered Splash Page\")\n\n\n    const useStyles = makeStyles((theme) => ({\n        MuiGrid: {\n            width: \"80%\"\n        },\n        MuiDialogActions: {\n            justifyContent: \"space-around\"\n        },\n        img: {\n            display: \"block\",\n            width: \"40%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        root: {\n            color: theme.primary,\n            input: {\n                textAlign: \"center\"\n            },\n            width: \"100%\",\n            justifyContent: 'space-between'\n        },\n        divDisplay: {\n            display: \"grid\",\n            width: \"70vw\",\n            color: theme.primary,\n        },\n        bodyDisplay: {\n            display: \"center\",\n            width: \"100%\",\n            paddingLeft: \"160px\",\n            paddingRight: \"160px\",\n            color: theme.primary,\n        }\n    }));\n    const classes = useStyles();\n\n    const login = () => {\n        console.log(\"Redirecting to Login\");\n        window.location.replace(\"/login\");\n        // return <Login></Login>\n    };\n    const signUp = () => {\n        console.log(\"Redirecting to SignUp\");\n        window.location.replace('sign-up');\n        // return <SignUp></SignUp>\n    };\n\n\n    return (\n        <div className={classes.divDisplay}>\n            <div className={classes.bodyDisplay} width=\"100%\"><img src=\"fullLogo.png\" alt=\"Placement Scheduler Logo\"/></div>\n            <div className={classes.bodyDisplay} style={{color: \"blue\"}}>\n                <h3>EMPLOYERS:</h3>\n                <p>We know employees cannot always predict when they will have to miss days at work.</p>\n                <p>We also know you already have a burgeoning schedule that waits for no-one.</p>\n                <p>Finding a replacement for a critical employee can be a time consuming task.</p>\n                <p>Placement Scheduler provides you with a one-click option. Place your request for any dental office\n                    employee and instantly receive a highly qualified, Covid-tested staff replacement!</p>\n                <br/>\n                <h3>DENTAL OFFICE STAFF:</h3>\n                <p>Set your own schedule. Tell us when you want to work, and when you don't.</p>\n                <p>Receive ONLY assignments when you want to work!</p>\n                <p>Adjust your schedule on a whim - no worries! Easy as just two clicks!!</p>\n            </div>\n            <div>\n            <Button\n                color=\"primary\"\n                variant=\"contained\"\n                type=\"submit\"\n                onClick={signUp}\n                style={{marginLeft: \"250px\", width: \"15%\" }}\n            >\n                {\n                    'Sign Up!'\n                }\n            </Button>\n            <Button\n                color=\"primary\"\n                variant=\"contained\"\n                type=\"submit\"\n                onClick={login}\n                style={{ width: \"15%\", marginLeft: \"40px\" }}\n            >\n                {\n                    'Log In'\n                }\n            </Button>\n            </div>\n\n        </div>\n    );\n}\n\nexport default SplashPage;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/Calendar.js",["266"],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/header.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/styles.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/build.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/blocked.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/placement.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/company.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/contractor.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/DayCard.js",["267","268","269"],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport moment from 'moment';\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"145px\",\n    height: \"100px\",\n    backgroundColor: \"#616161\",\n    color: \"white\",\n    borderRadius: \"4px\",\n  },\n  before: {\n    width: \"145px\",\n    height: \"100px\",\n    backgroundColor: \"#C5C9Cb\",\n    color: \"white\",\n    borderRadius: \"4px\",\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    // marginBottom: 12,\n  },\n});\nlet once = true\nexport default function DayCard({ day, placements, placementDates, handleDateClicked, userType}) {\n  // console.log(\"Calendar: placements: \", placements);\n  // console.log(\"Calendar: placementDates: \", placementDates);\n  console.log(\"************************Day Card View************************\")\n // console.log(\"PlacementDate: \", placementDates)\n console.log(\"UserType: \", userType)\n  const classes = useStyles();\n\n    function dayInPlacements(day) {\n      const dayStr = day.format('YYYY-MM-DD')\n\n      if (placementDates) {\n        if (dayStr in placementDates) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n\n      function beforeToday(day) {\n        //console.log(\"DayCard: beforeToday(day)\");\n        return moment(day).local().isBefore(new Date(), \"day\");\n      }\n\n    // const bull = <span className={classes.bullet}>•</span>;\n\nconst getPlacementInfo = (day) => {\n    let dayArray = placementDates[day.format('YYYY-MM-DD')].map((item, index) => {\n          return(`<div key={${index}}>{${item.companyInfo.companyName}}</div>`)\n      })\n      let retVal = \"\"\n      for (let i = 0 ; i < dayArray.length; i++) {\n        retVal += dayArray[i]\n      }\n      return retVal\n}\n\nif (!day) {\n  return null\n } else if (beforeToday(day)) {\n    return (\n    <Card className={classes.before}>\n      <CardContent>\n        <div>{day.format(\"D\").toString()}</div>\n          { dayInPlacements(day) && userType===\"contractor\"  ? placementDates[day.format('YYYY-MM-DD')].map((item, index) => {\n          return(<div key={index}>{item.companyInfo.companyName}:{item.companyInfo.name}</div>)}) : null }\n          { dayInPlacements(day) && userType===\"company\"  ? placementDates[day.format('YYYY-MM-DD')].map((item, index) => {\n          return(<div key={index}>{item.contractorInfo.name}:{item.contractorInfo.staffType}</div>)}) : null }\n          { dayInPlacements(day) && userType==='agency' ? placementDates[day.format('YYYY-MM-DD')].map((item,index) => {\n          return(<div fontSize=\"6pt\" key={index}>{item.agencyInfo.companyName}:{item.agencyInfo.staffType}</div>)}) : null }\n      </CardContent>\n    </Card>\n    )\n  } else {\n  return (\n    <Card key={\"cardKey\" } className={classes.root}>\n      <CardContent key={\"cardContent\"} onClick={ (e) => handleDateClicked(e, day)}>\n        <div key={day.format(\"D\").toString()} >{day.format(\"D\").toString()}</div>\n\n      { dayInPlacements(day) && userType===\"contractor\"  ? placementDates[day.format('YYYY-MM-DD')].map((item, index) => {\n          return(<div key={index}>{item.companyInfo.companyName}:{item.companyInfo.name}</div>)}) : null }\n      { dayInPlacements(day) && userType===\"company\" ? placementDates[day.format('YYYY-MM-DD')].map((item, index) => {\n          return(<div key={index}>{item.contractorInfo.name}:{item.contractorInfo.staffType}</div>)}) : null }\n      { dayInPlacements(day) && userType==='agency' ? placementDates[day.format('YYYY-MM-DD')].map((item,index) => {\n          return(<div fontSize=\"sm\" overflow=\"hidden\" key={index}>{item.agencyInfo.companyName}:{item.agencyInfo.staffType}</div>)}) : null }\n      </CardContent>\n    </Card>\n    // <div onClick={ (e) => handleDateClicked(e, day)}>{day.format(\"D\").toString()}</div>\n  );\n  }\n  }\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/GridComponent.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/BlockedCard.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/utils/utils.js",["270"],"const formatValue = (val) => {\n    if (parseInt(val) < 10) {\n      val = \"0\" + val;\n    }\n    return val\n  }\n\nexport const formatDateString = (date) => {\n    console.log(\"Received date: \", date)\n    let year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    month = formatValue(month)\n    let day = date.getDate();\n    day = formatValue(day)\n    console.log(\"Formatted date: \")\n    console.log(\"  year: \", year);\n    console.log(\"  month: \", month);\n    console.log(\"  day: \", day);\n    // let hour = date.getHours();\n    // hour = formatValue(hour)\n    // let minute = date.getMinutes();\n    // minute = formatValue(minute)\n    let hour = \"00\"\n    let minute = \"00\"\n    return year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + \"00\"\n  }\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/agencyInfo.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/agencyCompanyPlacements.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/agencyContractorPlacements.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/NavBar.js",["271","272","273","274","275","276","277","278","279","280","281"],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/ShowLoginNav.js",["282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308"],"import React, {useState, history} from 'react';\n\n\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { Tabs, Tab, makeStyles, AppBar, Button, List, ListItem, ListItemText, ListItemAvatar, Grid, Menu, MenuItem, ListItemIcon, GridListTile, GridList, GridListTileBar, Avatar } from \"@material-ui/core\";\nimport { NavLink, useHistory, useLocation, useParams } from \"react-router-dom\";\nconst ShowLoginNav = () => {\n        // setOpen(!open);\n    const { page } = useParams();\n    // const { classes, value } = useState();\n    const history = useHistory()\n    const tabNameToIndex = {\n        0: \"home\",\n        1: \"workouts\",\n        2: \"routes\",\n        3: \"explore\",\n        4: \"user\",\n    }\n\n    const indexToTabName = {\n        home: 0,\n        workouts: 1,\n        routes: 2,\n        explore: 3,\n        user: 4,\n    }\n\n    const [isLoggedin, setIsLoggedin] = useState(false);\n    const [selectedTab, setSelectedTab] = useState(indexToTabName[page]);\n    const [authenticated, setAuthenticated] = useState(false);\n    const [loaded, setLoaded] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [avatarUrl, setAvatorUrl] = useState('')\n\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    return (\n        <List >\n            <ListItem button onClick={handleClick}>\n                <ListItemText primary={<Avatar\n                    />} />\n                {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <ListItem value={0} button onClick={() => history.push('/login')}>\n                    <ListItemText primary=\"Log In\" />\n                </ListItem>\n                <ListItem value={1} button onClick={() => history.push('/sign-up')}>\n                    <ListItemText primary=\"Sign Up\" />\n                </ListItem>\n            </Collapse>\n        </List>\n    )\n}\n\nexport default ShowLoginNav;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/TabNav.js",["309","310","311"],"import React, {useState} from 'react';\nimport {\n    Tabs,\n    Tab,\n    makeStyles,\n} from \"@material-ui/core\";\n\nimport { useHistory,useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  indicator: {\n        backgroundColor: 'primary',\n    },\n}));\n\n\nconst TabNav = () => {\n\n    const tabNameToIndex = {\n        0: \"Feeds\",\n        1: \"workouts\",\n        2: \"routes\",\n        3: \"explore\",\n        4: \"user\",\n    }\n\n    const indexToTabName = {\n        feeds: 0,\n        workouts: 1,\n        routes: 2,\n        explore: 3,\n        user: 4,\n    }\n    const { page } = useParams();\n\n    const [selectedTab, setSelectedTab] = useState(indexToTabName[page]);\n    const history = useHistory()\n    const [image , setImage] = useState('/Logo.png')\n\n    const classes = useStyles();\n\n    const handleChange = (event, newValue) => {\n        setSelectedTab(newValue);\n    }\n\nif ((window.location.href).endsWith(\"create\")){\n  return (\n    <>\n        <Tabs style={{marginLeft:\"5%\"}} indicatorColor={'primary'} value={selectedTab} onChange={handleChange}>\n            <Tab value={0} onClick={() => history.push(`/workouts`)}\n                label=\"Home\" />\n            <Tab value={1} onClick={() => history.push(`/users/${window.localStorage.getItem(\"currentUser\")}/myworkouts`)}\n                label=\"Workouts\" />\n            <Tab value={2} onClick={() => history.push(`/users/${window.localStorage.getItem(\"currentUser\")}/myroutes`)}\n            label=\"Routes\" />\n            <Tab value={3} onClick={() => history.push('/search-result')}\n            label=\"explore\" />\n        </Tabs>\n    </>\n  )}else {\n    return(\n    <>\n    <Tabs indicatorColor={'primary'} value={selectedTab} onChange={handleChange}>\n        <Tab style={{ marginRight: \"4em\"}} value={0} onClick={() => history.push('/workouts')}\n            label={ <img className={classes.large} style={{maxHeight: \"3em\", maxWidth: \"3em\"}} src={image}/>\n                    }>\n        </Tab>\n        <Tab value={1} onClick={() => history.push(`/users/${window.localStorage.getItem(\"currentUser\")}/myworkouts`)}\n            label=\"Workouts\" />\n        <Tab value={2} onClick={() => history.push(`/users/${window.localStorage.getItem(\"currentUser\")}/myroutes`)}\n        label=\"Routes\" />\n        <Tab value={3} onClick={() => history.push('/search-result')}\n        label=\"explore\" />\n    </Tabs>\n</>)\n  }\n}\n  export default TabNav;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/LoggedOutTabNav.js",["312","313"],"import React, {useState } from 'react';\nimport {\n    Tabs,\n    Tab,\n    makeStyles,\n} from \"@material-ui/core\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  indicator: {\n        backgroundColor: 'primary',\n    },\n}));\n\n\nconst LoggedOutTabNav = () => {\n\n    const tabNameToIndex = {\n        0: \"home\",\n        1: \"login\",\n        2: \"signUp\",\n    }\n\n    const indexToTabName = {\n        home: 0,\n        login: 1,\n        signUp: 2,\n    }\n    const { page } = useParams();\n\n    const [selectedTab, setSelectedTab] = useState(indexToTabName[page]);\n    const history = useHistory()\n    const classes = useStyles();\n\n    const handleChange = (event, newValue) => {\n      console.log(\"New value: \", newValue);\n        setSelectedTab(newValue);\n    }\n\n  return (\n    <>\n        <Tabs indicatorColor={'primary'} value={selectedTab} onChange={handleChange}>\n            <Tab value={0} onClick={() => history.push('/')}\n                label={ <img className={classes.large} style={{maxHeight: \"3em\", maxWidth: \"3em\"}} src='/Logo.png'/>}>\n            </Tab>\n            <Tab value={1} onClick={() => history.push('/login')}\n              label={ \"LOGIN\" } >\n            </Tab>\n            <Tab value={2} onClick={() => history.push('/login')}\n              label={ \"SIGN UP!\" } >\n            </Tab>\n        </Tabs>\n    </>\n  )}\n\n  export default LoggedOutTabNav;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/ShowLogoutNav.js",["314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344"],"import React, {useState,useEffect, history} from 'react';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { Tabs, Tab, makeStyles, AppBar, Button, List, ListItem, ListItemText, ListItemAvatar, Grid, Menu, MenuItem, ListItemIcon, GridListTile, GridList, GridListTileBar, Avatar } from \"@material-ui/core\";\nimport { NavLink, useHistory, useLocation, useParams } from \"react-router-dom\";\nimport {logout} from \"../../../services/auth\"\nimport {apiUrl} from \"../../../config\"\nconst ShowLogoutNav = () => {\n        // setOpen(!open);\n    const { page } = useParams();\n    // const { classes, value } = useState();\n    const history = useHistory()\n    const tabNameToIndex = {\n        0: \"home\",\n        1: \"workouts\",\n        2: \"routes\",\n        3: \"explore\",\n        4: \"user\",\n    }\n\n    const indexToTabName = {\n        home: 0,\n        workouts: 1,\n        routes: 2,\n        explore: 3,\n        user: 4,\n    }\n\n    const [isLoggedin, setIsLoggedin] = useState(false);\n    const [selectedTab, setSelectedTab] = useState(indexToTabName[page]);\n    const [authenticated, setAuthenticated] = useState(false);\n    const [loaded, setLoaded] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [avatarUrl, setAvatorUrl] = useState('')\n\n    useEffect(()=> {\n\n        const getAvatarUrl = async () => {\n            const responce = await fetch(`/api/users/${window.localStorage.getItem(\"currentUser\")}`)\n            const parsedData = await responce.json()\n            setAvatorUrl(parsedData.avatar_url)\n        }\n        getAvatarUrl()\n    },[])\n\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    const handleLogout = async () => {\n        // handle logout here\n        //? TODO *******\n        await logout()\n        window.localStorage.removeItem(\"currentUser\")\n        history.push('/');\n    }\n\n        return (\n            <List >\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <ListItem value={3} button onClick={handleLogout}>\n                        <ListItemText primary=\"Log Out\" />\n                    </ListItem>\n                </Collapse>\n            </List>\n        )\n}\n\nexport default ShowLogoutNav;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/Logo.js",["345"],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/TabNavAgency.js",["346","347","348","349"],"import React, {useState} from 'react';\nimport {\n    Tabs,\n    Tab,\n    makeStyles,\n} from \"@material-ui/core\";\n\nimport { useHistory,useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  indicator: {\n        backgroundColor: 'primary',\n    },\n}));\n\n\nconst TabNavAgency = () => {\n\n    const tabNameToIndex = {\n        0: \"agencyCalendar\",\n        1: \"contractorPlacementsTable\",\n        2: \"companyPlacementsTable\",\n        3: \"contractorList\",\n        4: \"companyList\",\n        5: \"logout\",\n    }\n\n    const indexToTabName = {\n        agencyCalendar: 0,\n        contractorPlacementsTable: 1,\n        companyPlacementsTable: 2,\n        contractorList: 3,\n        companyList: 4,\n        logout: 5,\n    }\n    const { page } = useParams();\n\n    const [selectedTab, setSelectedTab] = useState(indexToTabName[page]);\n    const history = useHistory()\n    const [image , setImage] = useState('/Logo.png')\n\n    const classes = useStyles();\n\n    const handleChange = (event, newValue) => {\n        setSelectedTab(newValue);\n    }\n\n\n  return (\n    <>\n        <Tabs style={{marginLeft:\"5%\"}} indicatorColor={'primary'} value={selectedTab} onChange={handleChange}>\n            <Tab value={0} onClick={() => history.push(`/agencyView`)}\n                label=\"Calendar\" />\n            <Tab value={1} onClick={() => history.push(`/agencyContractorPlacements`)}\n                label=\"Contractor Placements\" />\n            <Tab value={2} onClick={() => history.push(`/agencyCompanyPlacements`)}\n            label=\"Company Placements\" />\n            <Tab value={3} onClick={() => history.push('/agencyContractors')}\n            label=\"Contractor List\" />\n             <Tab value={4} onClick={() => history.push('/agencyCompanies')}\n            label=\"Company List\" />\n             <Tab value={5} onClick={() => history.push('/logout')}\n            label=\"Logout\" />\n        </Tabs>\n\n    </>\n  )\n}\n\n  export default TabNavAgency;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/TabNavContractor.js",["350","351","352","353"],"import React, {useState} from 'react';\nimport {\n    Tabs,\n    Tab,\n    makeStyles,\n} from \"@material-ui/core\";\n//import LogoutForm from '../../auth/LogoutForm';\n\nimport { useHistory,useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  indicator: {\n        backgroundColor: 'primary',\n    },\n}));\n\n\nconst TabNavContractor = () => {\n\n    const tabNameToIndex = {\n        0: \"Calendar\",\n        1: \"Assignments\",\n        2: \"Logout\",\n    }\n\n    const indexToTabName = {\n        Calendar: 0,\n        Assignments: 1,\n        Logout: 2,\n    }\n    const { page } = useParams();\n\n    const [selectedTab, setSelectedTab] = useState(indexToTabName[page]);\n    const history = useHistory()\n    const [image , setImage] = useState('/Logo.png')\n\n    const classes = useStyles();\n\n    const handleChange = (event, newValue) => {\n        setSelectedTab(newValue);\n    }\n\n    // const onLogout = () => {\n    //   Logout();\n    //   history.push('/splashPage')\n\n    // }\n\n  return (\n    <>\n        <Tabs style={{marginLeft:\"5%\"}} indicatorColor={'primary'} value={selectedTab} onChange={handleChange}>\n            <Tab value={0} onClick={() => history.push(`/contractorView`)}\n                label=\"Calendar\" />\n            <Tab value={1} onClick={() => history.push(`/contractorTable`)}\n                label=\"Assignments\" />\n             <Tab value={2} onClick={() => history.push('/logout')}\n            label=\"Logout\" />\n        </Tabs>\n    </>\n  )\n}\n  export default TabNavContractor;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/navigator/Header/TabNavCompany.js",["354","355","356","357"],"import React, {useState} from 'react';\nimport {\n    Tabs,\n    Tab,\n    makeStyles,\n} from \"@material-ui/core\";\n\nimport { useHistory,useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  indicator: {\n        backgroundColor: 'primary',\n    },\n}));\n\n\nconst TabNavCompany = () => {\n\n    const tabNameToIndex = {\n        0: \"Calendar\",\n        1: \"Table\",\n        2: \"AddContractor\",\n        3: \"Logout\",\n    }\n\n    const indexToTabName = {\n        Calendar: 0,\n        Table: 1,\n        AddContractor: 2,\n        Logout: 3,\n    }\n    const { page } = useParams();\n\n    const [selectedTab, setSelectedTab] = useState(indexToTabName[page]);\n    const history = useHistory()\n    const [image , setImage] = useState('/Logo.png')\n\n    const classes = useStyles();\n\n    const handleChange = (event, newValue) => {\n        setSelectedTab(newValue);\n    }\n\n  return (\n    <>\n        <Tabs style={{marginLeft:\"5%\"}} indicatorColor={'primary'} value={selectedTab} onChange={handleChange}>\n            <Tab value={0} onClick={() => history.push(`/companyView`)}\n                label=\"Calendar\" />\n            <Tab value={1} onClick={() => history.push(`/companyTable`)}\n                label=\"Placements Detail\" />\n            <Tab value={2} onClick={() => history.push(`/companyAddPlacement`)}\n            label=\"Add Contractor\" />\n             <Tab value={3} onClick={() => history.push('/logout')}\n            label=\"Logout\" />\n        </Tabs>\n    </>\n  )\n}\n  export default TabNavCompany;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/Logout.js",["358"],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyCompanies.js",["359","360"],"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllCompanyInfo, setAgencyCompanyInfo } from '../../store/agencyInfo';\nimport AgencyCompanyTable from './AgencyCompanyTable';\n\nconst AgencyCompanies = () => {\n    const dispatch = useDispatch();\n\n    const companies = useSelector( state => state.agencyInfo.companyInfo.companies )\n\n    useEffect (() => {\n\n        (async() => {\n            const p = await getAllCompanyInfo();\n            if (!p.errors) {\n                dispatch(setAgencyCompanyInfo(p))\n            } else {\n                console.log(\"AgencyView: Error in getAll AgencyCompanyPlacementTableInfo fetch call\")\n            }\n        })()\n\n}, []) ;\n    return (\n        <AgencyCompanyTable></AgencyCompanyTable>\n    )\n}\n\nexport default AgencyCompanies;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyCompanyTable.js",["361","362","363","364","365","366","367"],"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport { Table,\n         TableBody,\n        TableCell,\n        TableContainer,\n        TableHead,\n        TablePagination,\n        TableRow,\n        TableSortLabel,\n        Toolbar,\n        Typography,\n        Paper,\n        IconButton,\n        Tooltip,\n        FormControlLabel,\n        Switch } from '@material-ui/core'\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport moment from 'moment';\nimport { getAllCompanyInfo, setAgencyCompanyInfo } from '../../store/agencyInfo';\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'companyName', numeric: false, disablePadding: false, label: 'Main Office Name' },\n  { id: 'locationName', numeric: false, disablePadding: false, label: 'Location Name'},\n  { id: 'address', numeric: false, disablePadding: false, label: 'Location Address' },\n  { id: 'contactName', numeric: false, disablePadding: false, label: 'Contact Name' },\n  { id: 'contactPhone', numeric: false, disablePadding: false, label: 'Phone' },\n  { id: 'contactEmail', numeric: false, disablePadding: false, label: \"Email\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  const userType = useSelector(state => state.authentication.userType);\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Company List\n        </Typography>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    padding: '20px',\n  },\n  tableCell: {\n    paddingLeft: \"20px\",\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst AgencyCompanyPlacementTable = ({placements, placementDates}) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const dispatch = useDispatch()\n\n\n  let companies = useSelector( state => state.agencyInfo.companyInfo.companies )\n\n  console.log(\" ******************* Company Table View********************\")\n  console.log(\"*********Companies contents: \")\n  if (companies) {\n  console.log(\"companies.length: \", companies.length)\n  for (let i = 0; i < companies.length; i++) {\n    console.log(companies[i])\n  }\n}\n\nuseEffect (() => {\n\n  (async() => {\n      const p = await getAllCompanyInfo();\n      if (!p.errors) {\n          dispatch(setAgencyCompanyInfo(p))\n\n      } else {\n          console.log(\"AgencyView: Error in getAll AgencyCompanyPlacementTableInfo fetch call\")\n      }\n  })()\n\n}, []) ;\n\n  function createData(companyName, locationName, address, contactName, contactPhone, contactEmail) {\n      return { companyName, locationName, address, contactName, contactPhone, contactEmail };\n    }\n\n  const rows = [];\n\nif(companies) {\n\n    console.log(\"companies: \")\n    for (let i=0; i < companies.length; i++) {\n      const companyName = companies[i].companyName;\n      //companyName, locationName, address, contactName, contactPhone, contactEmail\n        console.log(companies[i]);\n        for (let j=0; j < companies[i].companyContacts.length; j++) {\n        const locationName = companies[i].companyContacts[j].companyName;\n        const address = companies[i].companyContacts[j].addr1 + \" \" + companies[i].companyContacts[j].addr2 + \", \" + companies[i].companyContacts[j].city + \", \" + companies[i].companyContacts[j].state + \" \" + companies[i].companyContacts[j].zip\n        const contactName = companies[i].companyContacts[j].name;\n        const contactPhone = companies[i].companyContacts[j].phone;\n        const contactEmail = companies[i].companyContacts[j].email;\n        console.log(\"Company Name: \", companyName)\n        console.log(\"LocationName:  \", locationName)\n        console.log(\"Address: \", address)\n        console.log(\"contactName: \", contactName);\n        console.log(\"contactPhone: \", contactPhone);\n        console.log(\"contactEmail: \", contactEmail);\n        rows.push(createData(\n          companyName,\n          locationName,\n          address,\n          contactName,\n          contactPhone,\n          contactEmail,\n          ));\n    }\n  }\n\n\n}\n\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} padding={\"none\"}/>\n        <TableContainer className={classes.tableCell}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              paddingLeft=\"10px\"\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                    return (\n                      <TableRow key={index}>\n                        <TableCell align=\"left\">{row.companyName}</TableCell>\n                        <TableCell align=\"left\">{row.locationName}</TableCell>\n                        <TableCell align=\"left\">{row.address}</TableCell>\n                        <TableCell align=\"left\">{row.contactName}</TableCell>\n                        <TableCell align=\"left\">{row.contactPhone}</TableCell>\n                        <TableCell align=\"left\">{row.contactEmail}</TableCell>\n                      </TableRow>\n                    )\n\n                })}\n\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n\nexport default AgencyCompanyPlacementTable;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyContractors.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyContractorsTable.js",["368","369","370","371","372","373","374","375","376"],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyContractorPlacements.js",["377"],"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AgencyContractorPlacementTable from './AgencyContractorPlacementTable';\nimport { setAgencyCompanyPlacementDates, setAgencyCompanyPlacementInfo, getAllAgencyCompanyPlacementCalendarInfo, getAllAgencyCompanyPlacementTableInfo } from '../../store/agencyCompanyPlacements';\n\n\nconst AgencyContractorPlacements = () => {\n    console.log(\"********************AGENCY CONTRACTOR PLACEMENTS****************************\")\n    const dispatch = useDispatch();\n    const placements = useSelector ( store => store.agencyCompanyPlacements )\n    const placementDates = useSelector ( store => store.agencyCompanyPlacements.placementDates )\n\n    useEffect (() => {\n            (async() => {\n                const p = await getAllAgencyCompanyPlacementTableInfo();\n                if (!p.errors) {\n                    console.log(\"CompanyView: Placement table info set as:  \", p.placements)\n                    console.log(\"CompanyView: Setting placement info in redux store...\")\n                    dispatch(setAgencyCompanyPlacementInfo(p.agencyInfo))\n                } else {\n                    console.log(\"CompanyView: Error in getCompanyPlacementTableInfo fetch call\")\n                }\n                const pd = await getAllAgencyCompanyPlacementCalendarInfo();\n                if (!pd.errors) {\n                    console.log(\"CompanyView: Placement Dates set as: \", pd)\n                    console.log(\"CompanyView: Setting placementDates in redux store...\")\n                    dispatch(setAgencyCompanyPlacementDates(pd));\n                } else {\n                    console.log(\"CompanyView: Error with getCompanyPlacementCalendar fetch call\");\n                }\n            })()\n        console.log(\"Company placements: \", placements);\n\n        console.log(\"Company dates: \", placementDates);\n    },[] );\n\nreturn (\n    // <div>Agency Placement Table</div>\n    <AgencyContractorPlacementTable placements={placements.placementInfo} placementDates={placementDates}></AgencyContractorPlacementTable>\n)\n}\n\nexport default AgencyContractorPlacements;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyContractorPlacementTable.js",["378","379","380"],"import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport { Table,\n         TableBody,\n        TableCell,\n        TableContainer,\n        TableHead,\n        TablePagination,\n        TableRow,\n        TableSortLabel,\n        Toolbar,\n        Typography,\n        Paper,\n        IconButton,\n        Tooltip,\n        FormControlLabel,\n        Switch } from '@material-ui/core'\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport moment from 'moment';\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  { id: 'staffType', numeric: false, disablePadding: true, label: 'Staff Type' },\n  { id: 'phone', numeric: false, disablePadding: false, label: 'Phone' },\n  { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\n  { id: 'city', numeric: false, disablePadding: false, label: 'City' },\n  { id: 'office', numeric: false, disablePadding: false, label: 'Office' },\n  { id: 'startDate', numeric: false, disablePadding: false, label: 'Start Date' },\n  { id: 'endDate', numeric: false, disablePadding: false, label: 'End Date' }\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  const userType = useSelector(state => state.authentication.userType);\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Contractor Placement Schedule\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    padding: '20px',\n  },\n  tableCell: {\n    paddingLeft: \"20px\",\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst AgencyContractorPlacementTable = ({placements, placementDates}) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  // const agencyPlacements = useSelector(state => state.agencyPlacements.placementInfo)\n\n  console.log(\" ********************PlacementsTable View********************\")\n\n\n  useEffect (() => {\n    if (placements) {\n      for (let i = 0; i < placements.length; i++) {\n        console.log(\"Placements: \", placements[i]);\n      }\n    } else {\n        console.log(\"Placements:  No placements yet...\")\n    }\n  }, [] )\n\n  function createData(name, staffType, phone, email, city, office, startDate, endDate) {\n      return { name, staffType, phone, email, city, office, startDate, endDate };\n    }\n\n  const rows = [];\n\nif(placements) {\n    const placementArr = placements;\n\n    for (let i=0; i < placementArr.length; i++) {\n        let start = moment(placementArr[i].agencyInfo.startDate).format('MM/DD/YYYY');\n        let end = moment(placementArr[i].agencyInfo.endDate).format('MM/DD/YYYY');\n        let city = placementArr[i].agencyInfo.contractorCity\n        rows.push(createData(\n          placementArr[i].agencyInfo.contractorName,\n          placementArr[i].agencyInfo.staffType,\n          placementArr[i].agencyInfo.contractorPhone,\n          placementArr[i].agencyInfo.contractorEmail,\n          city,\n          placementArr[i].agencyInfo.companyName,\n          start.toString(),\n          end.toString(),\n          ));\n        }\n\n      }\n      console.log(\"rows.length:  \", rows.length)\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} padding={\"none\"}/>\n        <TableContainer className={classes.tableCell}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              paddingLeft=\"10px\"\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                    return (\n                      <TableRow key={index}>\n                        <TableCell align=\"left\">{row.name}</TableCell>\n                        <TableCell align=\"left\">{row.staffType}</TableCell>\n                        <TableCell align=\"left\">{row.phone}</TableCell>\n                        <TableCell align=\"left\">{row.email}</TableCell>\n                        <TableCell align=\"left\">{row.city}</TableCell>\n                        <TableCell align=\"left\">{row.office}</TableCell>\n                        <TableCell align=\"left\">{row.startDate}</TableCell>\n                        <TableCell align=\"left\">{row.endDate}</TableCell>\n                      </TableRow>\n                    )\n                })}\n\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n\nexport default AgencyContractorPlacementTable;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyCompanyPlacements.js",["381"],"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AgencyCompanyPlacementTable from './AgencyCompanyPlacementTable';\nimport { setAgencyCompanyPlacementDates, setAgencyCompanyPlacementInfo, getAllAgencyCompanyPlacementCalendarInfo, getAllAgencyCompanyPlacementTableInfo } from '../../store/agencyCompanyPlacements';\n\n\nconst AgencyCompanyPlacements = () => {\n    console.log(\"********************AGENCY COMPANY PLACEMENTS****************************\")\n    const dispatch = useDispatch();\n    const placements = useSelector ( store => store.agencyCompanyPlacements )\n    const placementDates = useSelector ( store => store.agencyCompanyPlacements.placementDates )\n\n    useEffect (() => {\n            (async() => {\n                const p = await getAllAgencyCompanyPlacementTableInfo();\n                if (!p.errors) {\n                    dispatch(setAgencyCompanyPlacementInfo(p.agencyInfo))\n                } else {\n                }\n                const pd = await getAllAgencyCompanyPlacementCalendarInfo();\n                if (!pd.errors) {\n                    dispatch(setAgencyCompanyPlacementDates(pd));\n                } else {\n\n                }\n            })()\n        console.log(\"Company placements: \", placements);\n\n        console.log(\"Company dates: \", placementDates);\n    },[] );\n\nreturn (\n    // <div>Agency Placement Table</div>\n    <AgencyCompanyPlacementTable placements={placements.placementInfo} placementDates={placementDates}></AgencyCompanyPlacementTable>\n)\n}\n\nexport default AgencyCompanyPlacements;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyCompanyPlacementTable.js",["382","383","384","385","386"],"import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport { Table,\n         TableBody,\n        TableCell,\n        TableContainer,\n        TableHead,\n        TablePagination,\n        TableRow,\n        TableSortLabel,\n        Toolbar,\n        Typography,\n        Paper,\n        IconButton,\n        Tooltip,\n        FormControlLabel,\n        Switch } from '@material-ui/core'\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport moment from 'moment';\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'company', numeric: false, disablePadding: false, label: 'Office' },\n  { id: 'contactName', numeric: false, disablePadding: false, label: 'Contact Name'},\n  { id: 'contactPhone', numeric: false, disablePadding: false, label: 'Phone' },\n  { id: 'contactEmail', numeric: false, disablePadding: false, label: 'Email' },\n  { id: 'contractorName', numeric: false, disablePadding: false, label: 'Contractor Name' },\n  { id: 'staffType', numeric: false, disablePadding: false, label: \"Staff Type\" },\n  { id: 'startDate', numeric: false, disablePadding: false, label: 'Start Date' },\n  { id: 'endDate', numeric: false, disablePadding: false, label: 'End Date' }\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  const userType = useSelector(state => state.authentication.userType);\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Company Placement Schedule\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    padding: '20px',\n  },\n  tableCell: {\n    paddingLeft: \"20px\",\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst AgencyCompanyPlacementTable = ({placements, placementDates}) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  // const agencyPlacements = useSelector(state => state.agencyPlacements.placementInfo)\n\n  console.log(\" ********************PlacementsTable View********************\")\n\n\n  useEffect (() => {\n    if (placements) {\n      for (let i = 0; i < placements.length; i++) {\n        console.log(\"Placements: \", placements[i]);\n      }\n    } else {\n        console.log(\"Placements:  No placements yet...\")\n    }\n  }, [] )\n\n  function createData(company, contactName, contactPhone, contactEmail, contractorName, staffType, startDate, endDate) {\n      return { company, contactName, contactPhone, contactEmail, contractorName, staffType, startDate, endDate };\n    }\n\n  const rows = [];\n\nif(placements) {\n    const placementArr = placements;\n\n    for (let i=0; i < placementArr.length; i++) {\n        let companyName = placementArr[i].agencyInfo.companyName + \" \" + placementArr[i].agencyInfo.contactAddress + \", \" + placementArr[i].agencyInfo.contactCity + \", \" + placementArr[i].agencyInfo.contactState + \"  \" + placementArr[i].agencyInfo.contactZip\n        let start = moment(placementArr[i].agencyInfo.startDate).format('MM/DD/YYYY');\n        let end = moment(placementArr[i].agencyInfo.endDate).format('MM/DD/YYYY');\n        let city = placementArr[i].agencyInfo.contractorCity\n        let companyContactName = placementArr[i].agencyInfo.contactName\n        console.log(\"Start: \", start.toString());\n        console.log(\"End: \", end.toString())\n        rows.push(createData(\n          companyName,\n          placementArr[i].agencyInfo.contactName,\n          placementArr[i].agencyInfo.contactPhone,\n          placementArr[i].agencyInfo.contactEmail,\n          placementArr[i].agencyInfo.contractorName,\n          placementArr[i].agencyInfo.staffType,\n          start.toString(),\n          end.toString(),\n          ));\n        }\n\n      }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} padding={\"none\"}/>\n        <TableContainer className={classes.tableCell}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              paddingLeft=\"10px\"\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                    return (\n                      <TableRow key={index}>\n                        <TableCell align=\"left\">{row.company}</TableCell>\n                        <TableCell align=\"left\">{row.contactName}</TableCell>\n                        <TableCell align=\"left\">{row.contactPhone}</TableCell>\n                        <TableCell align=\"left\">{row.contactEmail}</TableCell>\n                        <TableCell align=\"left\">{row.contractorName}</TableCell>\n                        <TableCell align=\"left\">{row.staffType}</TableCell>\n                        <TableCell align=\"left\">{row.startDate}</TableCell>\n                        <TableCell align=\"left\">{row.endDate}</TableCell>\n                      </TableRow>\n                    )\n\n                })}\n\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n\nexport default AgencyCompanyPlacementTable;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyView.js",["387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403"],"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import moment from \"moment\";\nimport { Button } from '@material-ui/core';\nimport  AgencyPlacementTable  from './AgencyPlacementTable';\nimport Calendar from '../CalendarComponent/Calendar';\nimport CompanyPlacementTable from '../Company/CompanyPlacementTable';\nimport { getAllAgencyContractorPlacementCalendarInfo, getAllAgencyContractorPlacementTableInfo, setAgencyContractorPlacementDates, setAgencyContractorPlacementInfo} from '../../store/agencyCompanyPlacements';\nimport { getAllAgencyCompanyPlacementCalendarInfo, getAllAgencyCompanyPlacementTableInfo, setAgencyCompanyPlacementDates, setAgencyCompanyPlacementInfo } from \"../../store/agencyCompanyPlacements\";\nimport {  getAllContractorInfo, getAllCompanyInfo, setAgencyCompanyInfo, setAgencyContractorInfo } from \"../../store/agencyInfo\";\nconst AgencyView = () => {\n    console.log(\"Entered AgencyView\")\n    const dispatch = useDispatch();\n    const companyPlacementDates = useSelector( state => state.agencyCompanyPlacements.placementDates )\n    const companyPlacementInfo = useSelector ( state => state.agencyCompanyPlacements.placementInfo )\n    const contractorPlacementDates = useSelector ( state => state.agencyContractorPlacements.placementDates )\n    const contractorPlacementInfo = useSelector ( state => state.agencyContractorPlacements.placementInfo)\n    const companyInfo = useSelector (state => state.agencyInfo.companyInfo)\n    const contractorInfo = useSelector (state => state.agencyInfo.contractorInfo)\n\n    console.log(\" *********************Entered Agency View********************\")\n\n    useEffect (() => {\n\n            (async() => {\n                console.log(\"Getting placements for agency\")\n                const p = await getAllAgencyCompanyPlacementTableInfo();\n                if (!p.errors) {\n                    console.log(\"AgencyView: Placement Table Info set as:  \", p)\n                    console.log(\"AgencyView: Setting placement table info in redux store...\")\n                    dispatch(setAgencyCompanyPlacementInfo(p))\n                } else {\n                    console.log(\"AgencyView: Error in getAll AgencyCompanyPlacementTableInfo fetch call\")\n                }\n                const pd = await getAllAgencyCompanyPlacementCalendarInfo();\n                if (!pd.errors) {\n                    console.log(\"AgencyView: Placement Calendar Dates set as: \", pd)\n                    console.log(\"AgencyView: Setting placementDates in redux store...\")\n                    dispatch(setAgencyCompanyPlacementDates(pd));\n                } else {\n                    console.log(\"AgencyView: Error with getCompanyPlacementCalendar fetch call\");\n                }\n            })()\n\n    }, []) ;\n\n    const savePlacement= async () => {\n        console.log(\"save Placement to backend - needs to be implemented\")\n    }\n\n    return (\n        <>\n            <div><h2 style={{textAlign: \"center\"}}>Agency View</h2></div>\n            <Calendar key={\"newCalendar\"} placements={companyPlacementInfo} placementDates={companyPlacementDates} datesBlocked={[]} userType={'agency'}></Calendar>\n            {/* <Calendar datesBlocked={datesBlocked} placements={placements} placementDates={placementDates} setDatesBlocked={setDatesBlocked}></Calendar> */}\n            {/* <Button key={\"buttonKey\"} onClick={savePlacement} style={{backgroundColor: \"#616161\", color: \"white\", marginTop:\"5px\", marginLeft:\"80%\"}}>SAVE</Button> */}\n            {/* <AgencyPlacementTable key={\"coPlacement\"} ></AgencyPlacementTable> */}\n        </>\n    );\n\n}\n\nexport default AgencyView;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Agency/AgencyPlacementTable.js",["404","405"],"import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport { Table,\n         TableBody,\n        TableCell,\n        TableContainer,\n        TableHead,\n        TablePagination,\n        TableRow,\n        TableSortLabel,\n        Toolbar,\n        Typography,\n        Paper,\n        IconButton,\n        Tooltip,\n        FormControlLabel,\n        Switch } from '@material-ui/core'\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport moment from 'moment';\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  { id: 'staffType', numeric: false, disablePadding: true, label: 'Staff Type' },\n  { id: 'phone', numeric: false, disablePadding: false, label: 'Phone' },\n  { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\n  { id: 'city', numeric: false, disablePadding: false, label: 'City' },\n  { id: 'startDate', numeric: false, disablePadding: false, label: 'Start Date' },\n  { id: 'endDate', numeric: false, disablePadding: false, label: 'End Date' }\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  const userType = useSelector(state => state.authentication.userType);\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Contractor Schedule\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    padding: '20px',\n  },\n  tableCell: {\n    paddingLeft: \"20px\",\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst AgencyPlacementTable = ({placements, placementDates}) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  // const agencyPlacements = useSelector(state => state.agencyPlacements.placementInfo)\n\n  console.log(\" ********************PlacementsTable View********************\")\n\n\n  useEffect (() => {\n    if (placements) {\n      for (let i = 0; i < placements.length; i++) {\n        console.log(\"Placements: \", placements[i]);\n      }\n    } else {\n        console.log(\"Placements:  No placements yet...\")\n    }\n  }, [] )\n\n  function createData(name, staffType, phone, email, city, startDate, endDate) {\n      return { name, staffType, phone, email, city, startDate, endDate };\n    }\n\n  const rows = [];\n\nif(placements) {\n    const placementArr = placements;\n\n      console.log(\"Placements is:  \", placements.length, \" ... long\")\n      for (let i=0; i < placementArr.length; i++) {\n        console.log(\"PlacementArr[\", i, \"]: \", placementArr[i])\n        console.log(\"Agency info:  \", placementArr[i].agencyInfo)\n        console.log(\"CompanyName:  \", placementArr[i].agencyInfo.companyName)\n      }\n    console.log(\"We have placements[0]: \", placementArr[0].agencyInfo)\n\n\n    for (let i=0; i < placementArr.length; i++) {\n        let start = moment(placementArr[i].agencyInfo.startDate).format('MM/DD/YYYY');\n        let end = moment(placementArr[i].agencyInfo.endDate).format('MM/DD/YYYY');\n        let city = placementArr[i].agencyInfo.contractorCity\n        rows.push(createData(\n          placementArr[i].agencyInfo.contractorName,\n          placementArr[i].agencyInfo.staffType,\n          placementArr[i].agencyInfo.contractorPhone,\n          placementArr[i].agencyInfo.contractorEmail,\n          city,\n          start.toString(),\n          end.toString(),\n          ));\n        }\n\n      }\n      console.log(\"rows.length:  \", rows.length)\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} padding={\"none\"}/>\n        <TableContainer className={classes.tableCell}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              paddingLeft=\"10px\"\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                    return (\n                      <TableRow key={index}>\n                        <TableCell align=\"left\">{row.name}</TableCell>\n                        <TableCell align=\"left\">{row.staffType}</TableCell>\n                        <TableCell align=\"left\">{row.phone}</TableCell>\n                        <TableCell align=\"left\">{row.email}</TableCell>\n                        <TableCell align=\"left\">{row.city}</TableCell>\n                        <TableCell align=\"left\">{row.startDate}</TableCell>\n                        <TableCell align=\"left\">{row.endDate}</TableCell>\n                      </TableRow>\n                    )\n                })}\n\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n\nexport default AgencyPlacementTable;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Company/CompanyPlacementTable.js",["406"],"import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport { Table,\n         TableBody,\n        TableCell,\n        TableContainer,\n        TableHead,\n        TablePagination,\n        TableRow,\n        TableSortLabel,\n        Toolbar,\n        Typography,\n        Paper,\n        IconButton,\n        Tooltip,\n        FormControlLabel,\n        Switch } from '@material-ui/core'\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport moment from 'moment';\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  { id: 'staffType', numeric: false, disablePadding: true, label: 'Staff Type' },\n  { id: 'phone', numeric: false, disablePadding: false, label: 'Phone' },\n  { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\n  { id: 'city', numeric: false, disablePadding: false, label: 'City' },\n  { id: 'startDate', numeric: false, disablePadding: false, label: 'Start Date' },\n  { id: 'endDate', numeric: false, disablePadding: false, label: 'End Date' }\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  const userType = useSelector(state => state.authentication.userType);\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Contractor Schedule\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    padding: '20px',\n  },\n  tableCell: {\n    paddingLeft: \"20px\",\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst CompanyPlacementTable = () => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const placements = useSelector(state => state.placement.placementInfo)\n\n  console.log(\" ********************PlacementsTable View********************\")\n  useEffect (() => {\n    if (placements) {\n      for (let i = 0; i < placements.length; i++) {\n        console.log(\"Placements: \", placements[i]);\n      }\n    } else {\n        console.log(\"Placements:  No placements yet...\")\n    }\n  }, [placements] )\n\n  function createData(name, staffType, phone, email, city, startDate, endDate) {\n      return { name, staffType, phone, email, city, startDate, endDate };\n    }\n\n  const rows = [];\n\nif(placements) {\n    const placementArr = placements.placements;\n\n    console.log(\"We have placements[0]: \", placementArr[0])\n\n\n    for (let i=0; i < placementArr.length; i++) {\n        let start = moment(placementArr[i].contractorInfo.startDate).format('MM/DD/YYYY');\n        let end = moment(placementArr[i].contractorInfo.endDate).format('MM/DD/YYYY');\n        let city = placementArr[i].contractorInfo.city\n        rows.push(createData(\n          placementArr[i].contractorInfo.name,\n          placementArr[i].contractorInfo.staffType,\n          placementArr[i].contractorInfo.phone,\n          placementArr[i].contractorInfo.email,\n          city,\n          start.toString(),\n          end.toString(), ));\n        }\n\n      }\n      console.log(\"rows.length:  \", rows.length)\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} padding={\"none\"}/>\n        <TableContainer className={classes.tableCell}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              paddingLeft=\"10px\"\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                    return (\n                      <TableRow key={index}>\n                        <TableCell align=\"left\">{row.name}</TableCell>\n                        <TableCell align=\"left\">{row.staffType}</TableCell>\n                        <TableCell align=\"left\">{row.phone}</TableCell>\n                        <TableCell align=\"left\">{row.email}</TableCell>\n                        <TableCell align=\"left\">{row.city}</TableCell>\n                        <TableCell align=\"left\">{row.startDate}</TableCell>\n                        <TableCell align=\"left\">{row.endDate}</TableCell>\n                      </TableRow>\n                    )\n                })}\n\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n\nexport default CompanyPlacementTable;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Company/CompanyView.js",["407","408","409","410","411"],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Company/CompanyAddPlacement.js",["412","413","414","415","416"],"import 'date-fns';\nimport React, { useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\nimport { setCompanyId } from '../../store/company'\nimport { getContractorAvail } from '../../store/contractor';\nimport Alert from '@material-ui/lab/Alert'\nimport { Button,\n         DialogContent,\n         FormControl,\n         Grid,\n         InputLabel,\n         MenuItem,\n         Select,\n         Typography,\n        } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CompanyPlacementPickerTable from './CompanyPlacementPickerTable';\nimport { setAvailableContractors } from '../../store/contractor';\nimport { formatDateString } from '../../utils/utils';\n\nexport default function CompanyAddPlacement() {\n  // The first commit of Material-UI\n  console.log(\" *********************Company Add Placement View********************\")\n  const companyId = useSelector(state => state.authentication.companyId);\n  const dispatch = useDispatch();\n  const [errors, setErrors] = useState('');\n  const [state, setLocalState] = useState('');\n  const [staffType, setLocalStaffType] = useState('');\n  const [location, setLocation] = useState('');\n  const [values, setValues] = useState({\n    staffType: '',\n    startDate: '',\n    endDate: '',\n  });\n  const [selectedDateFrom, setSelectedDateFrom] = React.useState(new Date());\n  const [selectedDateTo, setSelectedDateTo] = React.useState(new Date());\n  const contractorsAvailable = [];\n  const locations = useSelector( state => state.company.companyLocations);\n\n  if (locations) {\n      console.log(\"Locations: \", locations)\n      console.log(\"Locations size: \", locations.companyContacts.length)\n      for(let i = 0; i < locations.companyContacts.length; i++) {\n        console.log(locations.companyContacts[i].name)\n        console.log(locations.companyContacts[i].addr1 + \" \" + locations.companyContacts[i].addr2)\n        console.log(locations.companyContacts[i].city)\n      }\n  }\n  const handleDateChangeFrom = (date) => {\n    setSelectedDateFrom(date);\n  };\n  const handleDateChangeTo = (date) => {\n    setSelectedDateTo(date);\n  };\n  const useStyles = makeStyles((theme) => ({\n    MuiGrid: {\n        width: \"80%\"\n    },\n    MuiDialogActions: {\n        justifyContent: \"space-around\"\n    },\n    img: {\n        display: \"block\",\n        width: \"40%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n    },\n    root: {\n        color: theme.primary,\n        input: {\n            textAlign: \"center\"\n        },\n        width: \"75%\",\n        justifyContent: 'space-between'\n    },\n    select: {\n        minWidth: \"200px\",\n    }\n  }));\n  const classes = useStyles();\n\n  const submit = async (e) => {\n    e.preventDefault();\n\n    //   const contractor = await addContractor(userId, staffType);\n    //   if (!contractor.errors) {\n\n        // if (!contractorContact.errors) {\n\n        // } else {\n\n        // }\n    // } else {\n        // setErrors(contractor.errors);\n    // }\n}\n  const cancel = () => {\n      console.log(\"CompanyAddPlacement: Cancel button pressed, should be redirecting to '/' ...\");\n    // return <Redirect to=\"/\" />\n  }\n\n  const handleChange = (prop) => (event) => {\n    setValues({...values, [prop]: event.target.value});\n  }\n\n  //Because the select didn't work with handleChange at all\n  const handleStateChange = (event) => {\n    setLocalState(event.target.value);\n  };\n\n  const handleStaffTypeChange = (event) => {\n      setLocalStaffType(event.target.value);\n  }\n\n\n\n  // const formatValue = (val) => {\n  //   if (parseInt(val) < 10) {\n  //     val = \"0\" + val;\n  //   }\n  //   return val\n  // }\n\n  // const formatDateString = (date) => {\n  //   let year = date.getFullYear();\n  //   let month = date.getMonth();\n  //   month = formatValue(month)\n  //   let day = date.getDay();\n  //   day = formatValue(day)\n  //   // let hour = date.getHours();\n  //   // hour = formatValue(hour)\n  //   // let minute = date.getMinutes();\n  //   // minute = formatValue(minute)\n  //   let hour = \"00\"\n  //   let minute = \"00\"\n  //   return year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + \"00\"\n  // }\n\n  const search = async() => {\n    setErrors('');\n    //localhost:5000/api/contractor/available?staffType=Dental%20Assistant&\n    //dateRange=2021-01-19%2000:00:00/2021-01-25 00:00:00\n    let diff = selectedDateFrom - selectedDateTo;\n\n    if (diff > 0) {\n      setErrors('Ending date must be greater than or equal to beginning date.')\n    }\n    console.log(\"CompanyAddPlacement: selectedDateFrom orig: \", selectedDateFrom)\n    console.log(\"CompanyAddPlacement: selectedDateTo orig: \", selectedDateTo);\n    const dateFrom = formatDateString(selectedDateFrom);\n    const dateTo = formatDateString(selectedDateTo);\n    console.log(\"CompanyAddPlacement: after formatting selectedDateFrom: \", dateFrom)\n    console.log(\"CompanyAddPlacement: after formatting selectedDateTo: \", dateTo)\n\n    if (staffType === '') {\n      setErrors(\"Staff type must be selected\")\n    }\n\n\n    if (errors === '') {\n      (async() => {\n        const contractors = await getContractorAvail(staffType, dateFrom, dateTo)\n        if (!contractors.errors) {\n          console.log(\"Received contractors: \", contractors)\n          dispatch(setAvailableContractors(contractors))\n        } else {\n          setErrors(\"Problem processing request.\")\n          console.log(\"Problem receiving contractors\");\n        }\n\n      })()\n    }\n  }\n\n  const handleLocationChange = (event) => {\n    setLocation(event.target.value);\n  }\n\n  if (!companyId) {\n    console.log(\"Setting companyId in redux store\")\n    const cid = window.localStorage.getItem(\"companyId\");\n    dispatch(setCompanyId(cid));\n  return (\n    <>\n    <DialogContent style={{width:\"100%\", marginLeft:\"auto\", marginRight:\"auto\", justifyContent:\"center\"}}>\n      <Typography component=\"h6\" variant=\"h6\" align=\"center\" color=\"primary\" style={{marginTop: \"20px\", fontWeight:\"bold\"}}>Select your staffing needs ...</Typography>\n    </DialogContent>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Grid container direction=\"column\" justify=\"space-around\" alignItems=\"center\" spacing={2}>\n              <div className={classes.root}>\n                {errors ? <Alert severity=\"error\">{errors}</Alert> : <div></div> }\n              </div>\n              <ValidatorForm\n                  onSubmit={submit}\n                  //style={{width:\"75%\",}}\n                  >\n                  <br />\n\n                  <FormControl  variant=\"outlined\"  className={classes.formControl}>\n                    { locations && locations.companyContacts.length > 1 ?\n                    <>\n                      <InputLabel   id=\"staffType\">Choose location </InputLabel>\n                      <Select\n                        labelId=\"location\"\n                        id=\"location\"\n                        value={location}\n                        onChange={handleLocationChange}\n                        label=\"staffType\"\n                        className={classes.select}\n                      >\n                      { locations.companyContacts.map( (location, idx) => {\n                        return (\n                          <MenuItem key={location.id} value={location.id}>{location.name}<br/>{location.addr1 + \" \" + location.addr2}<br/>{location.city}</MenuItem>\n                        )\n                      })}\n                      </Select>\n                      </> : null }\n\n                    </FormControl>\n\n\n                    <FormControl  variant=\"outlined\"  className={classes.formControl}>\n                    <InputLabel   id=\"staffType\">Choose staff type</InputLabel>\n                    <Select\n                      labelId=\"staffType\"\n                      id=\"staffType\"\n                      value={staffType}\n                      onChange={handleStaffTypeChange}\n                      label=\"staffType\"\n                      className={classes.select}\n                    >\n                    <MenuItem value=\"\"><em>None</em></MenuItem>\n                    <MenuItem value={\"Dental Assistant\"}>Dental Assistant</MenuItem>\n                    <MenuItem value={\"Dentist\"}>Dentist</MenuItem>\n                    <MenuItem value={\"Front Office\"}>Front Office</MenuItem>\n                    <MenuItem value={\"Back Office\"}>Back Office</MenuItem>\n                    <MenuItem value={\"Dental Hygenist\"}>Dental Hygenist</MenuItem>\n                    </Select>\n                  </FormControl>\n                </ValidatorForm>\n          <KeyboardDatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog-from\"\n            label=\"Select Starting Date\"\n            format=\"MM/dd/yyyy\"\n            value={selectedDateFrom}\n            onChange={handleDateChangeFrom}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n          <KeyboardDatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog-to\"\n            label=\"Select Ending Date\"\n            format=\"MM/dd/yyyy\"\n            value={selectedDateTo}\n            onChange={handleDateChangeTo}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n           <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    type=\"button\"\n                    className=\"cancel\"\n                    value=\"Submit without validation\"\n                    onClick={search}\n                    style={{marginTop:\"20px\", justifyContent:\"center\", marginBottom:\"20px\", marginLeft:\"20%\", marginRight:\"0px\"}}\n                  >\n                    {\n                        ('Search')\n                    }\n                  </Button>\n\n            { contractorsAvailable.map((contractor, index) => {\n              <div key={index}>{contractor}</div>\n            })}\n        </Grid>\n        </MuiPickersUtilsProvider>\n        <CompanyPlacementPickerTable locationId={location} startDate={selectedDateFrom} endDate={selectedDateTo}></CompanyPlacementPickerTable>\n\n</>\n  );\n}\n}\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Company/CompanyPlacementPickerTable.js",["417","418","419","420","421","422","423","424","425"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { useSelector } from 'react-redux';\nimport { formatDateString } from '../../utils/utils'\nimport { createPlacement } from '../../store/placement';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  { id: 'staffType', numeric: true, disablePadding: false, label: 'Staff Type' },\n  { id: 'phone', numeric: true, disablePadding: false, label: 'Phone' },\n  { id: 'email', numeric: true, disablePadding: false, label: 'Email' },\n  { id: 'city', numeric: true, disablePadding: false, label: 'City' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          {/* <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n            display=\"none\"\n          /> */}\n        </TableCell>\n        {/* <TableRow>\n\n        </TableRow> */}\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n//   onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  contractorSelected: PropTypes.string,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n  const { contractorSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {/* {numSelected} selected */}\n          { contractorSelected } selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Available Contractors\n        </Typography>\n      )}\n\n      {numSelected > 1 ? (\n        // <Tooltip title=\"Delete\">\n        //   <IconButton aria-label=\"delete\">\n        //     <DeleteIcon />\n        //   </IconButton>\n        // </Tooltip>\n        null\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  contractorSelected: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function CompanyPlacementPickerTable({locationId, startDate, endDate}) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [contractorId, setContractorId] = React.useState();\n  const [selectedContractorName, setSelectedContractorName] = React.useState();\n  const [selectedContractorId, setSelectedContractorId] = React.useState();\n  const rows = [];\n  const ac = useSelector( state => state.contractor.availableContractors)\n  const companyId = useSelector ( state => state.company.companyId)\n\n  let availableContractors;\n  if (ac) {\n    availableContractors = ac.available\n    console.log(availableContractors);\n    if (availableContractors) {\n        for (let i=0; i < availableContractors.length; i++) {\n            console.log(\"Available: \", availableContractors[i].staffType)\n        }\n    }\n}\n  function createData(id, name, staffType, phone, email, city) {\n    return { id, name, staffType, phone, email, city };\n  }\n\n  if(availableContractors) {\n      for (let i=0; i < availableContractors.length; i++) {\n          let id = availableContractors[i].contact[\"id\"];\n          let name = availableContractors[i].contact[\"name\"];\n          let staffType = availableContractors[i].staffType;\n          let phone = availableContractors[i].contact[\"phone\"];\n          let email = availableContractors[i].contact[\"email\"];\n          let city = availableContractors[i].contact[\"city\"];\n\n        rows.push(\n            createData(id, name, staffType, phone, email, city),\n        );\n        }\n    }\n\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const getSelectedContractorInfo = (id) => {\n\n  }\n\n  const handleClick = (event, name, id) => {\n    if (selected.length > 0) {\n        setSelected([])\n        setSelectedContractorName('');\n        setSelectedContractorId('');\n    } else {\n        //const selectedIndex = selected.indexOf(name);\n        setSelected([id]);\n        setSelectedContractorName(name);\n        setSelectedContractorId(id);\n        console.log(\"Selected:  \", selectedContractorId);\n        console.log(\"Selected contractor name: \", selectedContractorName)\n        //let newSelected = [];\n    setSelected(name);\n    console.log(\"Set selected is now (from newSelected): \", selected)\n}\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const confirmRequest = async() => {\n\n\n    console.log(\"Confirming request...\")\n    console.log(\"companyId: \", companyId, \" ContractorId: \", selectedContractorId, \" LocationId: \", locationId)\n\n    const sd = formatDateString(startDate);\n    const ed = formatDateString(endDate);\n    console.log(\"startDate: \", sd)\n    console.log(\"endDate: \", ed)\n    //companyId, contractorId, companyContactId, startDate, endDate\n    const placement = await createPlacement(companyId, selectedContractorId, locationId, sd, ed)\n    if (!placement.errors) {\n        console.log(\"No placement errors\")\n    } else {\n        console.log(\"Error creating placement.\")\n    }\n  }\n\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} contractorSelected={''}/>\n        {/* <EnhancedTableToolbar numSelected={0} contractorSelected={''} /> */}\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n            //   contractorSelected={contractorSelected}\n              order={order}\n              orderBy={orderBy}\n            //   onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `${row.id}`;\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name, row.id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.staffType}</TableCell>\n                      <TableCell align=\"right\">{row.phone}</TableCell>\n                      <TableCell align=\"right\">{row.email}</TableCell>\n                      <TableCell align=\"right\">{row.city}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        { selected.length > 0 ?\n        <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    type=\"button\"\n                    className=\"confirmRequest\"\n                    value=\"Submit without validation\"\n                    onClick={confirmRequest}\n                    style={{marginTop:\"20px\", justifyContent:\"center\", marginBottom:\"20px\", marginLeft:\"20%\", marginRight:\"0px\"}}\n                  >\n                    {\n                        ('Confirm Request')\n                    }\n                  </Button>\n                  : null }\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {/* <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      /> */}\n    </div>\n  );\n}\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Company/CompanyInfo.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Contractor/ContractorView.js",["426","427","428"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from \"moment\";\nimport { getAllBlocked, setBlocked} from '../../store/blocked';\nimport { Button } from '@material-ui/core';\nimport { getContractorPlacements, getContractorPlacementCalendar, getContractorPlacementTableInfo, setPlacementInfo, setPlacementDates } from '../../store/placement';\nimport  ContractorPlacementTable  from './ContractorPlacementTable';\nimport Calendar from '../CalendarComponent/Calendar';\nimport { setContractorId } from '../../store/contractor';\n\nconst ContractorView = () => {\n    console.log(\"Entered ContractorView\")\n    const dispatch = useDispatch();\n    const [datesBlocked, setDatesBlocked] = useState([]);\n    const contractorId = useSelector(state => state.contractor.contractorId);\n    // const [placements, setPlacements] = useState([]);\n    // const [placementDates, setPlacementDates] = useState();\n    const placements = useSelector(state => state.placement.placementInfo);\n    const placementDates = useSelector(state => state.placement.placementDates);\n\n    function getDateRange(startDate, endDate) {\n        let start = moment(startDate).local();\n        let end = moment(endDate).local();\n        // console.log(\"Local start date:  \", start.format('MM/DD/YY hh:mm:ss'))\n\n        let diff = end.diff(start, 'days') + 1;\n        let thisDay = start.local().format('MM/DD/YYYY');\n        let range = [];\n        range.push(start)\n        for (let i = 1; i !== diff + 1; i++) {\n            let tmpDay = moment(thisDay).local();\n            range.push(tmpDay);\n            thisDay = tmpDay.add(1, 'day').format('MM/DD/YYYY hh:mm:ss')\n        }\n        // for (let i = 0; i < range.length; i++) {\n        //     console.log(\"range[\", i, \"]: \", range[i].format('MM/DD/YYYY hh:mm:ss'));\n        // }\n        return range;\n    }\n\n    useEffect (() => {\n        if (!contractorId) {\n            console.log(\"ContractorView: No contractor Id - getting it from local storage\")\n            let cid = window.localStorage.getItem(\"contractorId\");\n            if (cid) {\n             dispatch(setContractorId(cid));\n            }\n        }\n        if (!placements) {\n        (async() => {\n            const blockedDates = await getAllBlocked(contractorId);\n            if (!blockedDates.errors) {\n                let bd = blockedDates[\"blockedDates\"]\n                const blockedArr = []\n                for (let i = 0; i < bd.length; i++) {\n                    // console.log(\"Received date blocked: \", bd[i].blocked)\n                    const date = bd[i].blocked.replace(\" GMT\", \"\")\n                    // console.log(\"date: \", date);\n                    // console.log(\"Tranforming into moment: \", moment(date).format('MM/DD/YYYY HH:mm:ss'));\n                    // console.log(\"Transforming into local : \", moment(bd[i].blocked).local());\n                    blockedArr.push(moment(date).local());\n                }\n                console.log(\"Blocked array in ContractorView: \")\n                for (let i = 0; i < blockedArr.length; i++) {\n                    console.log(\"     \", blockedArr[i].format('MM/DD/YYYY HH:mm:ss'));\n\n                }\n                setDatesBlocked(blockedArr);\n                dispatch(setBlocked(blockedArr));\n            } else {\n                console.log(\"ContractorView:  Error from getAllBlocked fetch call\");\n            }\n            console.log(\"Getting placements for this contractor\")\n            // const p = await getContractorPlacements(contractorId);\n            const p = await getContractorPlacementTableInfo(contractorId);\n            if (!p.errors) {\n                console.log(\"ContractorView: Placements set as:  \", p)\n                //setPlacements(p)\n                console.log(\"ContractorView: Setting placement info in redux store...\")\n                dispatch(setPlacementInfo(p))\n            } else {\n                console.log(\"ContractorView: Error in getContractorPlacementTableInfo fetch call\")\n            }\n            const pd = await getContractorPlacementCalendar(contractorId);\n            if (!pd.errors) {\n                console.log(\"ContractorView: Placement Dates set as: \", pd)\n                //setPlacementDates(pd)\n                console.log(\"ContractorView: Setting placementDates in redux store...\")\n                dispatch(setPlacementDates(pd));\n            } else {\n                console.log(\"ContractorView: Error with getContractorPlacementCalendar fetch call\");\n            }\n        })();\n\n    }\n\n    }, [contractorId, placements] )\n\n    const saveDates = async () => {\n        // const blocked = createBlocked(contractorId, datesBlocked)\n        dispatch(setBlocked(datesBlocked));\n\n    }\n\n    if (!contractorId) {\n        console.log('Contractor Id is not set on login');\n        return null\n    } else {\n        return (\n            <>\n                <Calendar key={\"contrCalendar\"} datesBlocked={datesBlocked} placements={placements} placementDates={placementDates} setDatesBlocked={setDatesBlocked} userType={\"contractor\"}></Calendar>\n                {/* <Calendar datesBlocked={datesBlocked} placements={placements} placementDates={placementDates} setDatesBlocked={setDatesBlocked}></Calendar> */}\n                <Button onClick={saveDates} style={{backgroundColor: \"#616161\", color: \"white\", marginTop:\"5px\", marginLeft:\"80%\"}}>SAVE</Button>\n                <ContractorPlacementTable></ContractorPlacementTable>\n            </>\n        );\n    }\n}\n\nexport default ContractorView;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Contractor/ContractorPlacementTable.js",["429","430","431"],"import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport moment from 'moment';\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'companyName', numeric: false, disablePadding: true, label: 'Company Name' },\n  { id: 'contact', numeric: false, disablePadding: false, label: 'Contact' },\n  { id: 'phone', numeric: false, disablePadding: false, label: 'Phone' },\n  { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\n  { id: 'address', numeric: false, disablePadding: false, label: 'Address' },\n  { id: 'startDate', numeric: false, disablePadding: false, label: 'Start Date' },\n  { id: 'endDate', numeric: false, disablePadding: false, label: 'End Date' }\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  const userType = useSelector(state => state.authentication.userType);\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Contractor Schedule\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    padding: '20px',\n  },\n  tableCell: {\n    paddingLeft: \"20px\",\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst ContractorPlacementTable = () => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const userType = useSelector(state => state.authentication.userType);\n  const placements = useSelector(state => state.placement.placementInfo)\n  console.log(\"*****************PlacementsTable View********************\")\n\n  useEffect (() => {\n    if (placements) {\n      for (let i = 0; i < placements.length; i++) {\n        console.log(\"Placements: \", placements[i]);\n      }\n    } else {\n        console.log(\"Placements:  No placements yet...\")\n    }\n  }, [placements] )\n\n  function createData(companyName, contact, phone, email, address, startDate, endDate) {\n      return { companyName, contact, phone, email, address, startDate, endDate };\n    }\n\n  const rows = [];\n\nif(placements) {\n    const placementArr = placements.placements;\n\n    console.log(\"We have placements[0]: \", placementArr[0])\n\n\n    for (let i=0; i < placementArr.length; i++) {\n        let start = moment(placementArr[i].companyInfo.startDate).format('MM/DD/YYYY');\n        let end = moment(placementArr[i].companyInfo.endDate).format('MM/DD/YYYY');\n        let address = placementArr[i].companyInfo.address + \", \" + placementArr[i].companyInfo.city\n        rows.push(createData(\n          placementArr[i].companyInfo.companyName,\n          placementArr[i].companyInfo.name,\n          placementArr[i].companyInfo.phone,\n          placementArr[i].companyInfo.email,\n          address,\n          start.toString(),\n          end.toString(), ));\n        }\n\n      }\n      console.log(\"rows.length:  \", rows.length)\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} padding={\"none\"}/>\n        <TableContainer className={classes.tableCell}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              paddingLeft=\"10px\"\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                    return (\n                      <TableRow key={index}>\n                        <TableCell align=\"left\">{row.companyName}</TableCell>\n                        <TableCell align=\"left\">{row.contact}</TableCell>\n                        <TableCell align=\"left\">{row.phone}</TableCell>\n                        <TableCell align=\"left\">{row.email}</TableCell>\n                        <TableCell align=\"left\">{row.address}</TableCell>\n                        <TableCell align=\"left\">{row.startDate}</TableCell>\n                        <TableCell align=\"left\">{row.endDate}</TableCell>\n                      </TableRow>\n                    )\n                })}\n\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n\nexport default ContractorPlacementTable;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/Contractor/ContractorInfo.js",[],{"ruleId":"432","replacedBy":"433"},{"ruleId":"434","replacedBy":"435"},{"ruleId":"436","severity":1,"message":"437","line":3,"column":10,"nodeType":"438","messageId":"439","endLine":3,"endColumn":17},{"ruleId":"436","severity":1,"message":"440","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":18},{"ruleId":"436","severity":1,"message":"440","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":18},{"ruleId":"436","severity":1,"message":"441","line":4,"column":8,"nodeType":"438","messageId":"439","endLine":4,"endColumn":13},{"ruleId":"436","severity":1,"message":"442","line":5,"column":8,"nodeType":"438","messageId":"439","endLine":5,"endColumn":14},{"ruleId":"436","severity":1,"message":"443","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":21},{"ruleId":"436","severity":1,"message":"443","line":2,"column":10,"nodeType":"438","messageId":"439","endLine":2,"endColumn":21},{"ruleId":"436","severity":1,"message":"444","line":35,"column":5,"nodeType":"438","messageId":"439","endLine":35,"endColumn":9},{"ruleId":"436","severity":1,"message":"445","line":63,"column":7,"nodeType":"438","messageId":"439","endLine":63,"endColumn":23},{"ruleId":"446","severity":1,"message":"447","line":25,"column":77,"nodeType":"448","messageId":"449","endLine":25,"endColumn":78},{"ruleId":"436","severity":1,"message":"450","line":1,"column":17,"nodeType":"438","messageId":"439","endLine":1,"endColumn":26},{"ruleId":"436","severity":1,"message":"451","line":12,"column":14,"nodeType":"438","messageId":"439","endLine":12,"endColumn":28},{"ruleId":"436","severity":1,"message":"452","line":23,"column":12,"nodeType":"438","messageId":"439","endLine":23,"endColumn":22},{"ruleId":"436","severity":1,"message":"453","line":23,"column":24,"nodeType":"438","messageId":"439","endLine":23,"endColumn":37},{"ruleId":"436","severity":1,"message":"454","line":24,"column":12,"nodeType":"438","messageId":"439","endLine":24,"endColumn":23},{"ruleId":"436","severity":1,"message":"455","line":24,"column":25,"nodeType":"438","messageId":"439","endLine":24,"endColumn":39},{"ruleId":"436","severity":1,"message":"456","line":25,"column":12,"nodeType":"438","messageId":"439","endLine":25,"endColumn":25},{"ruleId":"436","severity":1,"message":"457","line":25,"column":27,"nodeType":"438","messageId":"439","endLine":25,"endColumn":43},{"ruleId":"436","severity":1,"message":"458","line":26,"column":12,"nodeType":"438","messageId":"439","endLine":26,"endColumn":18},{"ruleId":"436","severity":1,"message":"459","line":26,"column":20,"nodeType":"438","messageId":"439","endLine":26,"endColumn":29},{"ruleId":"436","severity":1,"message":"460","line":31,"column":11,"nodeType":"438","messageId":"439","endLine":31,"endColumn":22},{"ruleId":"436","severity":1,"message":"461","line":1,"column":26,"nodeType":"438","messageId":"439","endLine":1,"endColumn":33},{"ruleId":"436","severity":1,"message":"462","line":7,"column":10,"nodeType":"438","messageId":"439","endLine":7,"endColumn":14},{"ruleId":"436","severity":1,"message":"463","line":7,"column":16,"nodeType":"438","messageId":"439","endLine":7,"endColumn":19},{"ruleId":"436","severity":1,"message":"464","line":7,"column":21,"nodeType":"438","messageId":"439","endLine":7,"endColumn":31},{"ruleId":"436","severity":1,"message":"465","line":7,"column":33,"nodeType":"438","messageId":"439","endLine":7,"endColumn":39},{"ruleId":"436","severity":1,"message":"466","line":7,"column":41,"nodeType":"438","messageId":"439","endLine":7,"endColumn":47},{"ruleId":"436","severity":1,"message":"467","line":7,"column":79,"nodeType":"438","messageId":"439","endLine":7,"endColumn":93},{"ruleId":"436","severity":1,"message":"468","line":7,"column":95,"nodeType":"438","messageId":"439","endLine":7,"endColumn":99},{"ruleId":"436","severity":1,"message":"469","line":7,"column":101,"nodeType":"438","messageId":"439","endLine":7,"endColumn":105},{"ruleId":"436","severity":1,"message":"470","line":7,"column":107,"nodeType":"438","messageId":"439","endLine":7,"endColumn":115},{"ruleId":"436","severity":1,"message":"471","line":7,"column":117,"nodeType":"438","messageId":"439","endLine":7,"endColumn":129},{"ruleId":"436","severity":1,"message":"472","line":7,"column":131,"nodeType":"438","messageId":"439","endLine":7,"endColumn":143},{"ruleId":"436","severity":1,"message":"473","line":7,"column":145,"nodeType":"438","messageId":"439","endLine":7,"endColumn":153},{"ruleId":"436","severity":1,"message":"474","line":7,"column":155,"nodeType":"438","messageId":"439","endLine":7,"endColumn":170},{"ruleId":"436","severity":1,"message":"437","line":8,"column":10,"nodeType":"438","messageId":"439","endLine":8,"endColumn":17},{"ruleId":"436","severity":1,"message":"475","line":8,"column":31,"nodeType":"438","messageId":"439","endLine":8,"endColumn":42},{"ruleId":"436","severity":1,"message":"476","line":14,"column":11,"nodeType":"438","messageId":"439","endLine":14,"endColumn":25},{"ruleId":"436","severity":1,"message":"452","line":30,"column":12,"nodeType":"438","messageId":"439","endLine":30,"endColumn":22},{"ruleId":"436","severity":1,"message":"453","line":30,"column":24,"nodeType":"438","messageId":"439","endLine":30,"endColumn":37},{"ruleId":"436","severity":1,"message":"454","line":31,"column":12,"nodeType":"438","messageId":"439","endLine":31,"endColumn":23},{"ruleId":"436","severity":1,"message":"455","line":31,"column":25,"nodeType":"438","messageId":"439","endLine":31,"endColumn":39},{"ruleId":"436","severity":1,"message":"456","line":32,"column":12,"nodeType":"438","messageId":"439","endLine":32,"endColumn":25},{"ruleId":"436","severity":1,"message":"457","line":32,"column":27,"nodeType":"438","messageId":"439","endLine":32,"endColumn":43},{"ruleId":"436","severity":1,"message":"458","line":33,"column":12,"nodeType":"438","messageId":"439","endLine":33,"endColumn":18},{"ruleId":"436","severity":1,"message":"459","line":33,"column":20,"nodeType":"438","messageId":"439","endLine":33,"endColumn":29},{"ruleId":"436","severity":1,"message":"477","line":35,"column":12,"nodeType":"438","messageId":"439","endLine":35,"endColumn":21},{"ruleId":"436","severity":1,"message":"478","line":35,"column":23,"nodeType":"438","messageId":"439","endLine":35,"endColumn":35},{"ruleId":"436","severity":1,"message":"476","line":33,"column":11,"nodeType":"438","messageId":"439","endLine":33,"endColumn":25},{"ruleId":"436","severity":1,"message":"479","line":52,"column":20,"nodeType":"438","messageId":"439","endLine":52,"endColumn":28},{"ruleId":"480","severity":1,"message":"481","line":79,"column":21,"nodeType":"482","endLine":79,"endColumn":109},{"ruleId":"436","severity":1,"message":"476","line":33,"column":11,"nodeType":"438","messageId":"439","endLine":33,"endColumn":25},{"ruleId":"480","severity":1,"message":"481","line":59,"column":25,"nodeType":"482","endLine":59,"endColumn":117},{"ruleId":"436","severity":1,"message":"461","line":1,"column":36,"nodeType":"438","messageId":"439","endLine":1,"endColumn":43},{"ruleId":"436","severity":1,"message":"483","line":3,"column":8,"nodeType":"438","messageId":"439","endLine":3,"endColumn":18},{"ruleId":"436","severity":1,"message":"484","line":4,"column":8,"nodeType":"438","messageId":"439","endLine":4,"endColumn":18},{"ruleId":"436","severity":1,"message":"462","line":5,"column":10,"nodeType":"438","messageId":"439","endLine":5,"endColumn":14},{"ruleId":"436","severity":1,"message":"463","line":5,"column":16,"nodeType":"438","messageId":"439","endLine":5,"endColumn":19},{"ruleId":"436","severity":1,"message":"464","line":5,"column":21,"nodeType":"438","messageId":"439","endLine":5,"endColumn":31},{"ruleId":"436","severity":1,"message":"465","line":5,"column":33,"nodeType":"438","messageId":"439","endLine":5,"endColumn":39},{"ruleId":"436","severity":1,"message":"466","line":5,"column":41,"nodeType":"438","messageId":"439","endLine":5,"endColumn":47},{"ruleId":"436","severity":1,"message":"467","line":5,"column":79,"nodeType":"438","messageId":"439","endLine":5,"endColumn":93},{"ruleId":"436","severity":1,"message":"468","line":5,"column":95,"nodeType":"438","messageId":"439","endLine":5,"endColumn":99},{"ruleId":"436","severity":1,"message":"469","line":5,"column":101,"nodeType":"438","messageId":"439","endLine":5,"endColumn":105},{"ruleId":"436","severity":1,"message":"470","line":5,"column":107,"nodeType":"438","messageId":"439","endLine":5,"endColumn":115},{"ruleId":"436","severity":1,"message":"471","line":5,"column":117,"nodeType":"438","messageId":"439","endLine":5,"endColumn":129},{"ruleId":"436","severity":1,"message":"472","line":5,"column":131,"nodeType":"438","messageId":"439","endLine":5,"endColumn":143},{"ruleId":"436","severity":1,"message":"473","line":5,"column":145,"nodeType":"438","messageId":"439","endLine":5,"endColumn":153},{"ruleId":"436","severity":1,"message":"474","line":5,"column":155,"nodeType":"438","messageId":"439","endLine":5,"endColumn":170},{"ruleId":"436","severity":1,"message":"485","line":5,"column":172,"nodeType":"438","messageId":"439","endLine":5,"endColumn":178},{"ruleId":"436","severity":1,"message":"437","line":6,"column":10,"nodeType":"438","messageId":"439","endLine":6,"endColumn":17},{"ruleId":"436","severity":1,"message":"475","line":6,"column":31,"nodeType":"438","messageId":"439","endLine":6,"endColumn":42},{"ruleId":"436","severity":1,"message":"486","line":8,"column":9,"nodeType":"438","messageId":"439","endLine":8,"endColumn":15},{"ruleId":"436","severity":1,"message":"476","line":14,"column":11,"nodeType":"438","messageId":"439","endLine":14,"endColumn":25},{"ruleId":"436","severity":1,"message":"452","line":30,"column":12,"nodeType":"438","messageId":"439","endLine":30,"endColumn":22},{"ruleId":"436","severity":1,"message":"453","line":30,"column":24,"nodeType":"438","messageId":"439","endLine":30,"endColumn":37},{"ruleId":"436","severity":1,"message":"454","line":31,"column":12,"nodeType":"438","messageId":"439","endLine":31,"endColumn":23},{"ruleId":"436","severity":1,"message":"455","line":31,"column":25,"nodeType":"438","messageId":"439","endLine":31,"endColumn":39},{"ruleId":"436","severity":1,"message":"456","line":32,"column":12,"nodeType":"438","messageId":"439","endLine":32,"endColumn":25},{"ruleId":"436","severity":1,"message":"457","line":32,"column":27,"nodeType":"438","messageId":"439","endLine":32,"endColumn":43},{"ruleId":"436","severity":1,"message":"458","line":33,"column":12,"nodeType":"438","messageId":"439","endLine":33,"endColumn":18},{"ruleId":"436","severity":1,"message":"459","line":33,"column":20,"nodeType":"438","messageId":"439","endLine":33,"endColumn":29},{"ruleId":"436","severity":1,"message":"477","line":35,"column":12,"nodeType":"438","messageId":"439","endLine":35,"endColumn":21},{"ruleId":"436","severity":1,"message":"460","line":48,"column":11,"nodeType":"438","messageId":"439","endLine":48,"endColumn":22},{"ruleId":"480","severity":1,"message":"481","line":6,"column":12,"nodeType":"482","endLine":6,"endColumn":37},{"ruleId":"436","severity":1,"message":"476","line":33,"column":11,"nodeType":"438","messageId":"439","endLine":33,"endColumn":25},{"ruleId":"436","severity":1,"message":"487","line":54,"column":12,"nodeType":"438","messageId":"439","endLine":54,"endColumn":17},{"ruleId":"436","severity":1,"message":"479","line":54,"column":20,"nodeType":"438","messageId":"439","endLine":54,"endColumn":28},{"ruleId":"436","severity":1,"message":"488","line":56,"column":11,"nodeType":"438","messageId":"439","endLine":56,"endColumn":18},{"ruleId":"436","severity":1,"message":"476","line":34,"column":11,"nodeType":"438","messageId":"439","endLine":34,"endColumn":25},{"ruleId":"436","severity":1,"message":"487","line":49,"column":12,"nodeType":"438","messageId":"439","endLine":49,"endColumn":17},{"ruleId":"436","severity":1,"message":"479","line":49,"column":20,"nodeType":"438","messageId":"439","endLine":49,"endColumn":28},{"ruleId":"436","severity":1,"message":"488","line":51,"column":11,"nodeType":"438","messageId":"439","endLine":51,"endColumn":18},{"ruleId":"436","severity":1,"message":"476","line":33,"column":11,"nodeType":"438","messageId":"439","endLine":33,"endColumn":25},{"ruleId":"436","severity":1,"message":"487","line":50,"column":12,"nodeType":"438","messageId":"439","endLine":50,"endColumn":17},{"ruleId":"436","severity":1,"message":"479","line":50,"column":20,"nodeType":"438","messageId":"439","endLine":50,"endColumn":28},{"ruleId":"436","severity":1,"message":"488","line":52,"column":11,"nodeType":"438","messageId":"439","endLine":52,"endColumn":18},{"ruleId":"436","severity":1,"message":"489","line":1,"column":8,"nodeType":"438","messageId":"439","endLine":1,"endColumn":13},{"ruleId":"436","severity":1,"message":"490","line":9,"column":11,"nodeType":"438","messageId":"439","endLine":9,"endColumn":20},{"ruleId":"491","severity":1,"message":"492","line":22,"column":4,"nodeType":"493","endLine":22,"endColumn":6,"suggestions":"494"},{"ruleId":"436","severity":1,"message":"495","line":17,"column":9,"nodeType":"438","messageId":"439","endLine":17,"endColumn":19},{"ruleId":"436","severity":1,"message":"496","line":18,"column":9,"nodeType":"438","messageId":"439","endLine":18,"endColumn":16},{"ruleId":"436","severity":1,"message":"497","line":22,"column":8,"nodeType":"438","messageId":"439","endLine":22,"endColumn":18},{"ruleId":"436","severity":1,"message":"498","line":23,"column":8,"nodeType":"438","messageId":"439","endLine":23,"endColumn":22},{"ruleId":"436","severity":1,"message":"499","line":24,"column":8,"nodeType":"438","messageId":"439","endLine":24,"endColumn":14},{"ruleId":"436","severity":1,"message":"500","line":68,"column":9,"nodeType":"438","messageId":"439","endLine":68,"endColumn":17},{"ruleId":"491","severity":1,"message":"492","line":218,"column":4,"nodeType":"493","endLine":218,"endColumn":6,"suggestions":"501"},{"ruleId":"436","severity":1,"message":"495","line":17,"column":9,"nodeType":"438","messageId":"439","endLine":17,"endColumn":19},{"ruleId":"436","severity":1,"message":"496","line":18,"column":9,"nodeType":"438","messageId":"439","endLine":18,"endColumn":16},{"ruleId":"436","severity":1,"message":"497","line":22,"column":8,"nodeType":"438","messageId":"439","endLine":22,"endColumn":18},{"ruleId":"436","severity":1,"message":"498","line":23,"column":8,"nodeType":"438","messageId":"439","endLine":23,"endColumn":22},{"ruleId":"436","severity":1,"message":"499","line":24,"column":8,"nodeType":"438","messageId":"439","endLine":24,"endColumn":14},{"ruleId":"436","severity":1,"message":"500","line":68,"column":9,"nodeType":"438","messageId":"439","endLine":68,"endColumn":17},{"ruleId":"491","severity":1,"message":"492","line":217,"column":4,"nodeType":"493","endLine":217,"endColumn":17,"suggestions":"502"},{"ruleId":"491","severity":1,"message":"492","line":241,"column":4,"nodeType":"493","endLine":241,"endColumn":6,"suggestions":"503"},{"ruleId":"436","severity":1,"message":"504","line":254,"column":13,"nodeType":"438","messageId":"439","endLine":254,"endColumn":27},{"ruleId":"491","severity":1,"message":"505","line":35,"column":7,"nodeType":"493","endLine":35,"endColumn":9,"suggestions":"506"},{"ruleId":"436","severity":1,"message":"498","line":23,"column":8,"nodeType":"438","messageId":"439","endLine":23,"endColumn":22},{"ruleId":"436","severity":1,"message":"500","line":70,"column":9,"nodeType":"438","messageId":"439","endLine":70,"endColumn":17},{"ruleId":"491","severity":1,"message":"507","line":222,"column":6,"nodeType":"493","endLine":222,"endColumn":8,"suggestions":"508"},{"ruleId":"491","severity":1,"message":"505","line":30,"column":7,"nodeType":"493","endLine":30,"endColumn":9,"suggestions":"509"},{"ruleId":"436","severity":1,"message":"498","line":23,"column":8,"nodeType":"438","messageId":"439","endLine":23,"endColumn":22},{"ruleId":"436","severity":1,"message":"500","line":70,"column":9,"nodeType":"438","messageId":"439","endLine":70,"endColumn":17},{"ruleId":"491","severity":1,"message":"507","line":222,"column":6,"nodeType":"493","endLine":222,"endColumn":8,"suggestions":"510"},{"ruleId":"436","severity":1,"message":"511","line":237,"column":13,"nodeType":"438","messageId":"439","endLine":237,"endColumn":17},{"ruleId":"436","severity":1,"message":"512","line":238,"column":13,"nodeType":"438","messageId":"439","endLine":238,"endColumn":31},{"ruleId":"436","severity":1,"message":"466","line":4,"column":10,"nodeType":"438","messageId":"439","endLine":4,"endColumn":16},{"ruleId":"436","severity":1,"message":"513","line":5,"column":9,"nodeType":"438","messageId":"439","endLine":5,"endColumn":29},{"ruleId":"436","severity":1,"message":"514","line":7,"column":8,"nodeType":"438","messageId":"439","endLine":7,"endColumn":29},{"ruleId":"436","severity":1,"message":"515","line":8,"column":10,"nodeType":"438","messageId":"439","endLine":8,"endColumn":53},{"ruleId":"436","severity":1,"message":"516","line":8,"column":55,"nodeType":"438","messageId":"439","endLine":8,"endColumn":95},{"ruleId":"436","severity":1,"message":"517","line":8,"column":97,"nodeType":"438","messageId":"439","endLine":8,"endColumn":130},{"ruleId":"436","severity":1,"message":"518","line":8,"column":132,"nodeType":"438","messageId":"439","endLine":8,"endColumn":164},{"ruleId":"436","severity":1,"message":"519","line":10,"column":11,"nodeType":"438","messageId":"439","endLine":10,"endColumn":31},{"ruleId":"436","severity":1,"message":"520","line":10,"column":33,"nodeType":"438","messageId":"439","endLine":10,"endColumn":50},{"ruleId":"436","severity":1,"message":"521","line":10,"column":52,"nodeType":"438","messageId":"439","endLine":10,"endColumn":72},{"ruleId":"436","severity":1,"message":"522","line":10,"column":74,"nodeType":"438","messageId":"439","endLine":10,"endColumn":97},{"ruleId":"436","severity":1,"message":"523","line":16,"column":11,"nodeType":"438","messageId":"439","endLine":16,"endColumn":35},{"ruleId":"436","severity":1,"message":"524","line":17,"column":11,"nodeType":"438","messageId":"439","endLine":17,"endColumn":34},{"ruleId":"436","severity":1,"message":"525","line":18,"column":11,"nodeType":"438","messageId":"439","endLine":18,"endColumn":22},{"ruleId":"436","severity":1,"message":"526","line":19,"column":11,"nodeType":"438","messageId":"439","endLine":19,"endColumn":25},{"ruleId":"491","severity":1,"message":"492","line":45,"column":8,"nodeType":"493","endLine":45,"endColumn":10,"suggestions":"527"},{"ruleId":"436","severity":1,"message":"528","line":47,"column":11,"nodeType":"438","messageId":"439","endLine":47,"endColumn":24},{"ruleId":"436","severity":1,"message":"500","line":69,"column":9,"nodeType":"438","messageId":"439","endLine":69,"endColumn":17},{"ruleId":"491","severity":1,"message":"507","line":221,"column":6,"nodeType":"493","endLine":221,"endColumn":8,"suggestions":"529"},{"ruleId":"436","severity":1,"message":"500","line":68,"column":9,"nodeType":"438","messageId":"439","endLine":68,"endColumn":17},{"ruleId":"436","severity":1,"message":"466","line":4,"column":10,"nodeType":"438","messageId":"439","endLine":4,"endColumn":16},{"ruleId":"436","severity":1,"message":"514","line":5,"column":9,"nodeType":"438","messageId":"439","endLine":5,"endColumn":30},{"ruleId":"436","severity":1,"message":"530","line":26,"column":14,"nodeType":"438","messageId":"439","endLine":26,"endColumn":26},{"ruleId":"491","severity":1,"message":"531","line":103,"column":7,"nodeType":"493","endLine":103,"endColumn":18,"suggestions":"532"},{"ruleId":"436","severity":1,"message":"528","line":105,"column":11,"nodeType":"438","messageId":"439","endLine":105,"endColumn":24},{"ruleId":"436","severity":1,"message":"533","line":33,"column":10,"nodeType":"438","messageId":"439","endLine":33,"endColumn":15},{"ruleId":"436","severity":1,"message":"534","line":103,"column":9,"nodeType":"438","messageId":"439","endLine":103,"endColumn":15},{"ruleId":"436","severity":1,"message":"535","line":108,"column":9,"nodeType":"438","messageId":"439","endLine":108,"endColumn":21},{"ruleId":"436","severity":1,"message":"536","line":113,"column":9,"nodeType":"438","messageId":"439","endLine":113,"endColumn":26},{"ruleId":"537","severity":1,"message":"538","line":283,"column":60,"nodeType":"539","messageId":"540","endLine":283,"endColumn":62},{"ruleId":"436","severity":1,"message":"498","line":20,"column":8,"nodeType":"438","messageId":"439","endLine":20,"endColumn":22},{"ruleId":"436","severity":1,"message":"541","line":60,"column":20,"nodeType":"438","messageId":"439","endLine":60,"endColumn":36},{"ruleId":"436","severity":1,"message":"542","line":60,"column":54,"nodeType":"438","messageId":"439","endLine":60,"endColumn":65},{"ruleId":"436","severity":1,"message":"543","line":60,"column":67,"nodeType":"438","messageId":"439","endLine":60,"endColumn":75},{"ruleId":"436","severity":1,"message":"544","line":214,"column":10,"nodeType":"438","messageId":"439","endLine":214,"endColumn":22},{"ruleId":"436","severity":1,"message":"545","line":214,"column":24,"nodeType":"438","messageId":"439","endLine":214,"endColumn":39},{"ruleId":"436","severity":1,"message":"546","line":258,"column":9,"nodeType":"438","messageId":"439","endLine":258,"endColumn":29},{"ruleId":"436","severity":1,"message":"547","line":267,"column":9,"nodeType":"438","messageId":"439","endLine":267,"endColumn":34},{"ruleId":"436","severity":1,"message":"548","line":298,"column":9,"nodeType":"438","messageId":"439","endLine":298,"endColumn":26},{"ruleId":"436","severity":1,"message":"549","line":6,"column":10,"nodeType":"438","messageId":"439","endLine":6,"endColumn":33},{"ruleId":"436","severity":1,"message":"530","line":21,"column":14,"nodeType":"438","messageId":"439","endLine":21,"endColumn":26},{"ruleId":"491","severity":1,"message":"492","line":97,"column":8,"nodeType":"493","endLine":97,"endColumn":34,"suggestions":"550"},{"ruleId":"436","severity":1,"message":"498","line":23,"column":8,"nodeType":"438","messageId":"439","endLine":23,"endColumn":22},{"ruleId":"436","severity":1,"message":"500","line":69,"column":9,"nodeType":"438","messageId":"439","endLine":69,"endColumn":17},{"ruleId":"436","severity":1,"message":"500","line":207,"column":9,"nodeType":"438","messageId":"439","endLine":207,"endColumn":17},"no-native-reassign",["551"],"no-negated-in-lhs",["552"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Login' is defined but never used.","'SignUp' is defined but never used.","'useSelector' is defined but never used.","'once' is assigned a value but never used.","'getPlacementInfo' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useEffect' is defined but never used.","'setForceUpdate' is assigned a value but never used.","'isLoggedin' is assigned a value but never used.","'setIsLoggedin' is assigned a value but never used.","'selectedTab' is assigned a value but never used.","'setSelectedTab' is assigned a value but never used.","'authenticated' is assigned a value but never used.","'setAuthenticated' is assigned a value but never used.","'loaded' is assigned a value but never used.","'setLoaded' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'history' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'makeStyles' is defined but never used.","'AppBar' is defined but never used.","'Button' is defined but never used.","'ListItemAvatar' is defined but never used.","'Grid' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'ListItemIcon' is defined but never used.","'GridListTile' is defined but never used.","'GridList' is defined but never used.","'GridListTileBar' is defined but never used.","'useLocation' is defined but never used.","'tabNameToIndex' is assigned a value but never used.","'avatarUrl' is assigned a value but never used.","'setAvatorUrl' is assigned a value but never used.","'setImage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'Avatar' is defined but never used.","'apiUrl' is defined but never used.","'image' is assigned a value but never used.","'classes' is assigned a value but never used.","'React' is defined but never used.","'companies' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["553"],"'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'DeleteIcon' is defined but never used.","'FilterListIcon' is defined but never used.","'moment' is defined but never used.","'userType' is assigned a value but never used.",["554"],["555"],["556"],"'contractorName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'placementDates', and 'placements'. Either include them or remove the dependency array.",["557"],"React Hook useEffect has a missing dependency: 'placements'. Either include it or remove the dependency array.",["558"],["559"],["560"],"'city' is assigned a value but never used.","'companyContactName' is assigned a value but never used.","'AgencyPlacementTable' is defined but never used.","'CompanyPlacementTable' is defined but never used.","'getAllAgencyContractorPlacementCalendarInfo' is defined but never used.","'getAllAgencyContractorPlacementTableInfo' is defined but never used.","'setAgencyContractorPlacementDates' is defined but never used.","'setAgencyContractorPlacementInfo' is defined but never used.","'getAllContractorInfo' is defined but never used.","'getAllCompanyInfo' is defined but never used.","'setAgencyCompanyInfo' is defined but never used.","'setAgencyContractorInfo' is defined but never used.","'contractorPlacementDates' is assigned a value but never used.","'contractorPlacementInfo' is assigned a value but never used.","'companyInfo' is assigned a value but never used.","'contractorInfo' is assigned a value but never used.",["561"],"'savePlacement' is assigned a value but never used.",["562"],"'getDateRange' is defined but never used.","React Hook useEffect has missing dependencies: 'companyLocations', 'dispatch', 'placementDates', and 'placements'. Either include them or remove the dependency array.",["563"],"'state' is assigned a value but never used.","'cancel' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleStateChange' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'contractorId' is assigned a value but never used.","'setContractorId' is assigned a value but never used.","'handleSelectAllClick' is assigned a value but never used.","'getSelectedContractorInfo' is assigned a value but never used.","'handleChangeDense' is assigned a value but never used.","'getContractorPlacements' is defined but never used.",["564"],"no-global-assign","no-unsafe-negation",{"desc":"565","fix":"566"},{"desc":"565","fix":"567"},{"desc":"568","fix":"569"},{"desc":"565","fix":"570"},{"desc":"571","fix":"572"},{"desc":"573","fix":"574"},{"desc":"571","fix":"575"},{"desc":"573","fix":"576"},{"desc":"565","fix":"577"},{"desc":"573","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},"Update the dependencies array to be: [dispatch]",{"range":"583","text":"584"},{"range":"585","text":"584"},"Update the dependencies array to be: [contractors, dispatch]",{"range":"586","text":"587"},{"range":"588","text":"584"},"Update the dependencies array to be: [dispatch, placementDates, placements]",{"range":"589","text":"590"},"Update the dependencies array to be: [placements]",{"range":"591","text":"592"},{"range":"593","text":"590"},{"range":"594","text":"592"},{"range":"595","text":"584"},{"range":"596","text":"592"},"Update the dependencies array to be: [companyId, companyLocations, dispatch, placementDates, placements]",{"range":"597","text":"598"},"Update the dependencies array to be: [contractorId, dispatch, placements]",{"range":"599","text":"600"},[719,721],"[dispatch]",[6189,6191],[6144,6157],"[contractors, dispatch]",[6741,6743],[1901,1903],"[dispatch, placementDates, placements]",[6306,6308],"[placements]",[1346,1348],[6352,6354],[2780,2782],[6202,6204],[4287,4298],"[companyId, companyLocations, dispatch, placementDates, placements]",[4557,4583],"[contractorId, dispatch, placements]"]