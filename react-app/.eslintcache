[{"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/index.js":"1","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/App.js":"2","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/configureStore.js":"3","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/Theme.js":"4","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/UsersList.js":"5","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/User.js":"6","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/NavBar.js":"7","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/services/auth.js":"8","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/ProtectedRoute.js":"9","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LoginForm.js":"10","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/SignUpForm.js":"11","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LogoutButton.js":"12","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/authentication.js":"13","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/config.js":"14","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/SplashPage.js":"15","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/Calendar.js":"16","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/header.js":"17","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/styles.js":"18","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/build.js":"19"},{"size":434,"mtime":1607535137719,"results":"20","hashOfConfig":"21"},{"size":2797,"mtime":1607535137701,"results":"22","hashOfConfig":"21"},{"size":497,"mtime":1607535137721,"results":"23","hashOfConfig":"21"},{"size":548,"mtime":1607535137702,"results":"24","hashOfConfig":"21"},{"size":719,"mtime":1607535137711,"results":"25","hashOfConfig":"21"},{"size":832,"mtime":1607535137710,"results":"26","hashOfConfig":"21"},{"size":1254,"mtime":1607535137708,"results":"27","hashOfConfig":"21"},{"size":1016,"mtime":1607018667135,"results":"28","hashOfConfig":"21"},{"size":381,"mtime":1607535137714,"results":"29","hashOfConfig":"21"},{"size":8485,"mtime":1607535137712,"results":"30","hashOfConfig":"21"},{"size":7968,"mtime":1607535137715,"results":"31","hashOfConfig":"21"},{"size":828,"mtime":1607535137713,"results":"32","hashOfConfig":"21"},{"size":7117,"mtime":1607535137720,"results":"33","hashOfConfig":"21"},{"size":82,"mtime":1607535137717,"results":"34","hashOfConfig":"21"},{"size":173,"mtime":1607535137709,"results":"35","hashOfConfig":"21"},{"size":4365,"mtime":1607711392132,"results":"36","hashOfConfig":"21"},{"size":881,"mtime":1607535137705,"results":"37","hashOfConfig":"21"},{"size":436,"mtime":1607285155533,"results":"38","hashOfConfig":"21"},{"size":557,"mtime":1607535137704,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"njrkyg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/index.js",[],["80","81"],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/App.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/configureStore.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/Theme.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/UsersList.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/User.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/NavBar.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/services/auth.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/ProtectedRoute.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LoginForm.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/SignUpForm.js",["82"],"import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../services/auth';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Alert from '@material-ui/lab/Alert'\nimport { Button,\n         Dialog,\n         DialogContent,\n         FormControl,\n         Grid,\n         OutlinedInput,\n         InputLabel,\n         makeStyles,\n         MenuItem,\n         Select,\n         Typography,\n        } from '@material-ui/core';\nimport { setUserName, setUserEmail, setUserType, setUserId } from '../../store/authentication';\n\n\nconst SignUpForm = ({openDialog, authenticated, setAuthenticated}) => {\n  console.log(\"SignUpForm:  Entered signupform...\");\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(openDialog);\n  const [errors, setErrors] = useState('');\n  const [values, setValues] = useState({\n    email: '',\n    password: '',\n    repeatPassword: '',\n    userType: ''\n  });\n\n  const useStyles = makeStyles((theme) => ({\n    MuiGrid: {\n        width: \"80%\"\n    },\n    MuiDialogActions: {\n        justifyContent: \"space-around\"\n    },\n    img: {\n        display: \"block\",\n        width: \"40%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n    },\n    root: {\n        color: theme.primary,\n        input: {\n            textAlign: \"center\"\n        },\n        width: \"100%\",\n        justifyContent: 'space-between'\n    },\n  }));\n  const classes = useStyles();\n\n  const onSignUp = async (e) => {\n    e.preventDefault();\n    if (values.password === values.repeatPassword) {\n      const user = await signUp(values.username, values.email, values.password, values.userType);\n      if (!user.errors) {\n        alert(\"Entering onSignup ...\");\n        setOpen(false);\n        dispatch(setUserEmail(user.email));\n        dispatch(setUserId(user.id));\n        dispatch(setUserName(user.username));\n        dispatch(setUserType(user.userType));\n        window.localStorage.setItem(\"currentUser\",user.id)\n      } else {\n        setErrors(user.errors);\n      }\n    } else {\n      console.log(\"Passwords did not match ... \");\n    }\n  };\n\n  const handleChange = (prop) => (event) => {\n    console.log(\"Inside handleChange for prop: \", prop, \" and event.target.value: \", event.target.value)\n    setValues({...values, [prop]: event.target.value});\n  }\n\n  // if (authenticated) {\n  //   alert(\"SignUpForm:  User is authenticated ... redirecting to '/'\");\n  //   return <Redirect to=\"/\" />;\n  // }\n\n  if (window.localStorage.getItem(\"currentUser\")) {\n    window.location.replace(\"/\");\n  }\n\n  ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n    const len = value.length\n    const pwdPortion  = values.password.substring(0, len);\n    if (value === pwdPortion) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n\n  return (\n    <>\n      <Dialog open={open} style={{width:\"100%\", marginLeft:\"auto\", marginRight:\"auto\", justifyContent:\"center\"}} aria-labelledby=\"form-dialog-title\">\n        <div>\n          <Typography component=\"h6\" variant=\"h6\" align=\"center\" color=\"primary\" style={{marginTop: \"20px\", fontWeight:\"bold\"}}>Create Your Placement Scheduler Account</Typography>\n        </div>\n\n        <DialogContent style={{width:\"100%\", marginLeft:\"auto\", marginRight:\"auto\", justifyContent:\"center\"}}>\n          <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\n          <div className={classes.root}>\n            {errors ? <Alert severity=\"error\">{errors}</Alert> : <div></div> }\n          </div>\n            <ValidatorForm\n              onSubmit={onSignUp}\n              style={{width:\"75%\", justifyContent: \"center\"}}\n              >\n              <br />\n\n              <TextValidator\n                variant=\"outlined\"\n                label=\"User Name\"\n                onChange={handleChange('username')}\n                name=\"username\"\n                value={values.username}\n                validators={['required']}\n                errorMessages={['Username field is required']}\n                style={{width:\"100%\", justifyContent:\"center\"}}\n              />\n\n              <br />\n              <TextValidator\n                variant=\"outlined\"\n                label=\"Email\"\n                onChange={handleChange('email')}\n                name=\"email\"\n                value={values.email}\n                validators={['required', 'isEmail']}\n                errorMessages={['Email is required', 'Email is not valid']}\n                sttyle={{width:\"100%\", justifyContent:\"center\", marginRight:\"0px\"}}\n              />\n\n              <br />\n              <FormControl className={classes.formControl} style={{width:\"100%\", marginBottom:\"20px\"}}>\n                <InputLabel htmlFor=\"userType-helper\" style={{paddingLeft:\"15px\"}}>User Type</InputLabel>\n                <Select\n                value={values.userType}\n                onChange={handleChange('userType')}\n                input={<OutlinedInput name='userType' id='userType-helper' />}\n              >\n                <MenuItem value=\"\"><em>None</em></MenuItem>\n                <MenuItem value={\"admin\"}>Admin</MenuItem>\n                <MenuItem value={\"contractor\"}>Contractor</MenuItem>\n                <MenuItem value={\"company\"}>Company</MenuItem>\n              </Select>\n              </FormControl>\n\n\n              {/* <TextValidator\n                variant=\"outlined\"\n                label=\"User Type ['admin', 'contractor', 'company']\"\n                onChange={handleChange('userType')}\n                name='userType'\n                value={values.userType}\n                type={\"text\"}\n                style={{width:\"100%\", justifyContent:\"center\"}}\n                validators={['required']}\n                errorMessages={['User type is required']}\n              /> */}\n\n              <br />\n              <TextValidator\n                variant=\"outlined\"\n                label=\"Password\"\n                onChange={handleChange('password')}\n                name=\"password\"\n                value={values.password}\n                type={\"password\"}\n                style={{width:\"100%\", justifyContent:\"center\"}}\n                validators={['required']}\n                errorMessages={['Password is required']}\n              />\n\n              <br />\n              <TextValidator\n                variant=\"outlined\"\n                label=\"Confirm Password\"\n                onChange={handleChange('repeatPassword')}\n                name=\"repeadPassword\"\n                value={values.repeatPassword}\n                type={\"password\"}\n                style={{width:\"100%\", justifyContent:\"center\"}}\n                validators={['required', 'isPasswordMatch']}\n                errorMessages={['Confirm password is required', 'Passwords do not match']}\n              />\n\n              <br />\n              <Grid container item xs={10} style={{width:\"100%\", padding:\"0px\"}} >\n                <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                  style={{marginTop:\"20px\", justifyContent:\"flex-start\", marginBottom:\"20px\"}}\n                >\n                  {\n                    ('Sign Up')\n                  }\n                </Button>\n                <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  type=\"button\"\n                  className=\"cancel\"\n                  value=\"Submit without validation\"\n                  onClick={e => window.location.href=\"/\"}\n                  style={{marginTop:\"20px\", justifyContent:\"flex-end\", marginBottom:\"20px\", marginLeft:\"20%\", marginRight:\"0px\"}}\n                >\n                  {\n                      ('Cancel')\n                  }\n                </Button>\n                </Grid>\n            </ValidatorForm>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default SignUpForm;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LogoutButton.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/authentication.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/config.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/SplashPage.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/Calendar.js",["83"],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/header.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/styles.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/build.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":18},{"ruleId":"88","severity":1,"message":"92","line":12,"column":21,"nodeType":"90","messageId":"91","endLine":12,"endColumn":33},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'setDateRange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]