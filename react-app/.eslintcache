[{"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/index.js":"1","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/App.js":"2","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/configureStore.js":"3","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/Theme.js":"4","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/UsersList.js":"5","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/User.js":"6","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/NavBar.js":"7","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/services/auth.js":"8","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/ProtectedRoute.js":"9","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LoginForm.js":"10","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/SignUpForm.js":"11","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LogoutButton.js":"12","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/authentication.js":"13","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/config.js":"14","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/SplashPage.js":"15","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/Calendar.js":"16","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/header.js":"17","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/styles.js":"18","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/build.js":"19","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CompanyInfo.js":"20","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/ContractorInfo.js":"21","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/blocked.js":"22","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/placement.js":"23","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/company.js":"24","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/contractor.js":"25","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/ContractorView.js":"26","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/ContractorPlacementTable.js":"27","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/DayCard.js":"28","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/GridComponent.js":"29","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/BlockedCard.js":"30","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/AgencyView.js":"31","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CompanyView.js":"32","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CompanyPlacementTable.js":"33"},{"size":434,"mtime":1607535137719,"results":"34","hashOfConfig":"35"},{"size":4143,"mtime":1608597215129,"results":"36","hashOfConfig":"35"},{"size":695,"mtime":1608573478528,"results":"37","hashOfConfig":"35"},{"size":548,"mtime":1607535137702,"results":"38","hashOfConfig":"35"},{"size":719,"mtime":1607535137711,"results":"39","hashOfConfig":"35"},{"size":832,"mtime":1607535137710,"results":"40","hashOfConfig":"35"},{"size":1638,"mtime":1608606479583,"results":"41","hashOfConfig":"35"},{"size":1016,"mtime":1607018667135,"results":"42","hashOfConfig":"35"},{"size":381,"mtime":1607535137714,"results":"43","hashOfConfig":"35"},{"size":18247,"mtime":1608605441440,"results":"44","hashOfConfig":"35"},{"size":8343,"mtime":1608573478522,"results":"45","hashOfConfig":"35"},{"size":2470,"mtime":1608604678623,"results":"46","hashOfConfig":"35"},{"size":7118,"mtime":1608573478525,"results":"47","hashOfConfig":"35"},{"size":82,"mtime":1607535137717,"results":"48","hashOfConfig":"35"},{"size":173,"mtime":1607535137709,"results":"49","hashOfConfig":"35"},{"size":9348,"mtime":1608670745684,"results":"50","hashOfConfig":"35"},{"size":1548,"mtime":1608670449959,"results":"51","hashOfConfig":"35"},{"size":436,"mtime":1607285155533,"results":"52","hashOfConfig":"35"},{"size":557,"mtime":1607535137704,"results":"53","hashOfConfig":"35"},{"size":12318,"mtime":1608669639716,"results":"54","hashOfConfig":"35"},{"size":13119,"mtime":1608573478516,"results":"55","hashOfConfig":"35"},{"size":3516,"mtime":1608573628209,"results":"56","hashOfConfig":"35"},{"size":4572,"mtime":1608754215038,"results":"57","hashOfConfig":"35"},{"size":8182,"mtime":1608573478527,"results":"58","hashOfConfig":"35"},{"size":8970,"mtime":1608573478529,"results":"59","hashOfConfig":"35"},{"size":6424,"mtime":1608670896647,"results":"60","hashOfConfig":"35"},{"size":11793,"mtime":1608670964156,"results":"61","hashOfConfig":"35"},{"size":3257,"mtime":1608669994002,"results":"62","hashOfConfig":"35"},{"size":1932,"mtime":1608423200675,"results":"63","hashOfConfig":"35"},{"size":1225,"mtime":1608669926608,"results":"64","hashOfConfig":"35"},{"size":144,"mtime":1608576316539,"results":"65","hashOfConfig":"35"},{"size":6746,"mtime":1608670802380,"results":"66","hashOfConfig":"35"},{"size":11780,"mtime":1608670672373,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"njrkyg",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/index.js",[],["137","138"],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/App.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/configureStore.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/Theme.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/UsersList.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/User.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/NavBar.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/services/auth.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/ProtectedRoute.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LoginForm.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/SignUpForm.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LogoutButton.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/authentication.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/config.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/SplashPage.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/Calendar.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/header.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/styles.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/build.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CompanyInfo.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/ContractorInfo.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/blocked.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/placement.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/company.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/contractor.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/ContractorView.js",["139"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from \"moment\";\nimport { getAllBlocked, setBlocked} from '../store/blocked';\nimport { Button } from '@material-ui/core';\nimport { getContractorPlacements } from '../store/placement';\nimport  ContractorPlacementTable  from './ContractorPlacementTable';\nimport Calendar from './CalendarComponent/Calendar';\nimport { setContractorId } from '../store/contractor';\n\nconst ContractorView = () => {\n    console.log(\"Entered ContractorView\")\n    const dispatch = useDispatch();\n    const [datesBlocked, setDatesBlocked] = useState([]);\n    const contractorId = useSelector(state => state.contractor.contractorId);\n    const [placements, setPlacements] = useState([]);\n    const [placementDates, setPlacementDates] = useState([]);\n\n    function getDateRange(startDate, endDate) {\n        let start = moment(startDate).local();\n        let end = moment(endDate).local();\n        // console.log(\"Local start date:  \", start.format('MM/DD/YY hh:mm:ss'))\n\n        let diff = end.diff(start, 'days') + 1;\n        let thisDay = start.local().format('MM/DD/YYYY');\n        let range = [];\n        range.push(start)\n        for (let i = 1; i !== diff + 1; i++) {\n            let tmpDay = moment(thisDay).local();\n            range.push(tmpDay);\n            thisDay = tmpDay.add(1, 'day').format('MM/DD/YYYY hh:mm:ss')\n        }\n        // for (let i = 0; i < range.length; i++) {\n        //     console.log(\"range[\", i, \"]: \", range[i].format('MM/DD/YYYY hh:mm:ss'));\n        // }\n        return range;\n    }\n\n    useEffect (() => {\n        if (!contractorId) {\n            let cid = window.localStorage.getItem(\"contractorId\");\n            if (cid) {\n             dispatch(setContractorId(cid));\n            }\n        }\n        (async() => {\n            const blockedDates = await getAllBlocked(contractorId);\n            if (!blockedDates.errors) {\n                let bd = blockedDates[\"blockedDates\"]\n                const blockedArr = []\n                for (let i = 0; i < bd.length; i++) {\n                    // console.log(\"Received date blocked: \", bd[i].blocked)\n                    const date = bd[i].blocked.replace(\" GMT\", \"\")\n                    // console.log(\"date: \", date);\n                    // console.log(\"Tranforming into moment: \", moment(date).format('MM/DD/YYYY HH:mm:ss'));\n                    // console.log(\"Transforming into local : \", moment(bd[i].blocked).local());\n                    blockedArr.push(moment(date).local());\n                }\n                console.log(\"Blocked array in ContractorView: \")\n                for (let i = 0; i < blockedArr.length; i++) {\n                    console.log(\"     \", blockedArr[i].format('MM/DD/YYYY HH:mm:ss'));\n\n                }\n                setDatesBlocked(blockedArr);\n                dispatch(setBlocked(blockedArr));\n            } else {\n                console.log(\"ContractorView:  Error from getAllBlocked fetch call\");\n            }\n            console.log(\"Getting placements for this contractor\")\n            const p = await getContractorPlacements(contractorId);\n            if (!p.errors) {\n                const pa = p[\"placements\"];\n                const pd = []\n                const placementObj = [];\n                for (let j = 0; j < pa.length; j++) {\n                    console.log(\"Company Id:  \", pa[j].companyContact.id);\n                    console.log(\"CompanyName: \", pa[j].companyContact.companyName);\n                    placementObj.push({ \"companyId\": pa[j].companyContact.id,\n                                         \"companyName\": pa[j].companyContact.companyName,\n                                         \"contactName\": pa[j].companyContact.name,\n                                         \"contactEmail\": pa[j].companyContact.email,\n                                         \"contactPhone\": pa[j].companyContact.phone,\n                                         \"addr1\": pa[j].companyContact.addr1,\n                                         \"addr2\": pa[j].companyContact.addr2,\n                                         \"city\": pa[j].companyContact.city,\n                                         \"state\": pa[j].companyContact.state,\n                                         \"zip\": pa[j].companyContact.zip,\n                                         \"startDate\": pa[j].startDate,\n                                         \"endDate\": pa[j].endDate,\n                                         \"staffType\": pa[j].contractor.staffType })\n                    console.log(\"Placement[\",j, \"]:  start: \", pa[j].startDate, \" end: \", pa[j].endDate)\n                    if (pa[j].startDate === pa[j].endDate) {\n                        let temp =  moment(pa[j].startDate).local();\n                        pd.push(temp);\n                    } else {\n                        // takes strings, returns moments of local time.\n                        let dr = getDateRange(pa[j].startDate, pa[j].endDate)\n                        for (let i = 0; i < dr.length; i++) {\n                            pd.push(dr[i]);\n                        }\n                    }\n                }\n                setPlacements(placementObj);\n                setPlacementDates(pd);\n                console.log(\"Placement dates set:  \", placementDates);\n            } else {\n                console.log(\"Errors getting placements:  \", p.errors);\n            }\n        })();\n    }, [contractorId] )\n    const saveDates = async () => {\n        // const blocked = createBlocked(contractorId, datesBlocked)\n        dispatch(setBlocked(datesBlocked));\n\n    }\n\n    if (!contractorId) {\n        console.log('Contractor Id is not set on login');\n        return null\n    } else {\n        return (\n            <>\n                <Calendar key={\"contrCalendar\"} datesBlocked={datesBlocked} placements={placements} placementDates={placementDates} setDatesBlocked={setDatesBlocked}></Calendar>\n                {/* <Calendar datesBlocked={datesBlocked} placements={placements} placementDates={placementDates} setDatesBlocked={setDatesBlocked}></Calendar> */}\n                <Button onClick={saveDates} style={{backgroundColor: \"#616161\", color: \"white\", marginTop:\"5px\", marginLeft:\"80%\"}}>SAVE</Button>\n                <ContractorPlacementTable placements={placements}></ContractorPlacementTable>\n            </>\n        );\n    }\n}\n\nexport default ContractorView;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/ContractorPlacementTable.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/DayCard.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/GridComponent.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/BlockedCard.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/AgencyView.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CompanyView.js",["140"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from \"moment\";\nimport { Button } from '@material-ui/core';\nimport { getCompanyPlacements } from '../store/placement';\nimport  CompanyPlacementTable  from './CompanyPlacementTable';\nimport NewCalendar from './CalendarComponent/Calendar';\nimport { setCompanyId } from '../store/company';\n\nconst CompanyView = () => {\n    console.log(\"Entered CompanyView\")\n    const dispatch = useDispatch();\n    const companyId = useSelector(state => state.company.companyId);\n    const [placements, setPlacements] = useState([]);\n    const [placementDates, setPlacementDates] = useState([]);\n    console.log(\" *********Entered Company View**************\")\n    console.log(\"placementDates array length: \", placementDates.length);\n\n    // function printRange(message, range) {\n    //     console.log(message);\n    //     for (let i = 0; i < range.length; i++) {\n    //         console.log(\"     range[\", i, \"]: \", range[i].format('MM/DD/YYYY hh:mm:ss'));\n    //     }\n    // }\n\n    function getDateRange(startDate, endDate, pdArr) {\n\n        let start = moment(startDate);\n        let end = moment(endDate);\n\n        let diff = end.diff(start, 'days') + 1;\n        let thisDay = start.local().format('MM/DD/YYYY');\n        let range = [...pdArr];\n        for (let i = 0; i < range; i++) {\n            console.log(\"     range[\", i, \"]: \", range[i].format('MM/DD/YYYY hh:mm:ss'))\n        }\n        //range.push(start)\n        for (let i = 1; i !== diff + 1; i++) {\n            let duplicate = false;\n            let tmpDay = moment(thisDay).local();\n\n            for (let k = 0; k < range.length; k++) {\n                let rangeStart = range[k].startOf('day');\n                let tmpStart = tmpDay.startOf('day');\n\n                if (rangeStart.isSame(tmpStart)) {\n                    duplicate = true;\n                }\n            }\n\n            if (!duplicate) {\n                range.push(tmpDay);\n            }\n            let tmpTmpDay = moment(tmpDay.format(\"MM/DD/YYYY hh:mm:ss\"))\n            thisDay = tmpTmpDay.add(1, 'day').format('MM/DD/YYYY hh:mm:ss')\n        }\n        for (let i = 0; i < range.length; i++) {\n            console.log(\"range[\", i, \"]: \", range[i].format('MM/DD/YYYY hh:mm:ss'));\n        }\n        return range;\n    }\n\n    useEffect (() => {\n        if (!companyId) {\n            let cid = window.localStorage.getItem(\"companyId\");\n            if (cid) {\n             dispatch(setCompanyId(cid));\n            }\n        }\n        (async() => {\n            const placements = await getCompanyPlacements(companyId);\n            console.log(\"************ Placement dates array length: \", placementDates.length)\n            if (!placements.errors) {\n                let pl = placements[\"placements\"]\n                const placementArr = []\n                let placementDatesArr = []\n                for (let i = 0; i < pl.length; i++) {\n                    // console.log(\"Received date blocked: \", pl[i].blocked)\n                    const startDate = moment(pl[i].startDate.replace(\" GMT\", \"\")).format('MM/DD/YYYY HH:mm:ss')\n                    const endDate = moment(pl[i].endDate.replace(\" GMT\", \"\")).format('MM/DD/YYYY HH:mm:ss')\n                    const name = pl[i].contractor.contractorContact.name;\n                    const email = pl[i].contractor.contractorContact.email;\n                    const phone = pl[i].contractor.contractorContact.phone;\n                    const city = pl[i].contractor.contractorContact.city;\n                    const staffType = pl[i].contractor.staffType;\n                    const contractorId = pl[i].contractor.id\n                    // console.log(\"date: \", date);\n                    // console.log(\"Tranforming into moment: \", moment(date).format('MM/DD/YYYY HH:mm:ss'));\n                    // console.log(\"Transforming into local : \", moment(pl[i].blocked).local());\n                    placementArr.push({startDate, endDate, name, email, phone, city, staffType, contractorId});\n\n                    const pd = getDateRange(startDate, endDate, placementDatesArr);\n                    console.log(\"Received from getDateRange: \")\n                    // for (let k=0; k < pd.length || k == 5; k++) {\n                    //     console.log(\"     dateRange[\", k, \"]: \", pd[k].format('MM/DD/YYYY hh:mm:ss'))\n                    // }\n                    console.log(\"Before setting PlacementDates in useEffect: \")\n                    for (let k=0; k < placementDatesArr.length; k++) {\n                        console.log(\"     placementDates[\", k, \"]: \", placementDatesArr[k].format('MM/DD/YYYY hh:mm:ss'))\n                    }\n                    placementDatesArr = ([...pd])\n                    console.log(\"After updating PlacementDates: \")\n                    for (let k=0; k < placementDatesArr.length || k === 5; k++) {\n                        console.log(\"      placementDatesArr[\", k, \"]: \", placementDatesArr[k].format('MM/DD/YYYY hh:mm:ss'))\n                    }\n                    console.log(\"Placement date for [\", i, \"]: \", pd)\n                    // setPlacementDates(...placementDates, ...pd)\n                }\n                console.log(\"Placement array in CompanyView: \")\n                for (let i = 0; i < placementArr.length || i === 5; i++) {\n                    console.log(\"placementArr[\", i, \"]:  \", placementArr[i])\n                }\n                setPlacements(placementArr);\n                setPlacementDates([...placementDatesArr])\n                console.log(\"Placement dates: \", placementDatesArr);\n            } else {\n                console.log(\"CompanyView:  Error from getAllPlacements fetch call\");\n            }\n\n            })();\n    }, [companyId] )\n\n    const savePlacement= async () => {\n        console.log(\"save Placement to backend - needs to be implemented\")\n        //const placement = createPlacement(companyId, )\n        //dispatch(setPlacement(placement));\n    }\n\n    if (!companyId) {\n        console.log('Company Id is not set on login');\n        return null\n    } else {\n        return (\n            <>\n                <NewCalendar key={\"newCalendar\"} placements={placements} datesBlocked={[]}></NewCalendar>\n                {/* <Calendar datesBlocked={datesBlocked} placements={placements} placementDates={placementDates} setDatesBlocked={setDatesBlocked}></Calendar> */}\n                <Button key={\"buttonKey\"} onClick={savePlacement} style={{backgroundColor: \"#616161\", color: \"white\", marginTop:\"5px\", marginLeft:\"80%\"}}>SAVE</Button>\n                <CompanyPlacementTable key={\"coPlacement\"} placements={placements}></CompanyPlacementTable>\n            </>\n        );\n    }\n}\n\nexport default CompanyView;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CompanyPlacementTable.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":110,"column":8,"nodeType":"147","endLine":110,"endColumn":22,"suggestions":"148"},{"ruleId":"145","severity":1,"message":"149","line":121,"column":8,"nodeType":"147","endLine":121,"endColumn":19,"suggestions":"150"},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'placementDates'. Either include them or remove the dependency array.","ArrayExpression",["153"],"React Hook useEffect has missing dependencies: 'dispatch' and 'placementDates.length'. Either include them or remove the dependency array.",["154"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [contractorId, dispatch, placementDates]",{"range":"159","text":"160"},"Update the dependencies array to be: [companyId, dispatch, placementDates.length]",{"range":"161","text":"162"},[5453,5467],"[contractorId, dispatch, placementDates]",[5756,5767],"[companyId, dispatch, placementDates.length]"]