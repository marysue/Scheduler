[{"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/index.js":"1","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/App.js":"2","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/configureStore.js":"3","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/Theme.js":"4","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/UsersList.js":"5","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/User.js":"6","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/NavBar.js":"7","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/services/auth.js":"8","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/ProtectedRoute.js":"9","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LoginForm.js":"10","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/SignUpForm.js":"11","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LogoutButton.js":"12","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/authentication.js":"13","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/config.js":"14","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/SplashPage.js":"15","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/Calendar.js":"16","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/header.js":"17","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/styles.js":"18","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/build.js":"19","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CompanyInfo.js":"20","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/ContractorInfo.js":"21","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/blocked.js":"22","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/placement.js":"23","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/company.js":"24","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/contractor.js":"25","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/ContractorView.js":"26","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/ContractorPlacementTable.js":"27","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/DayCard.js":"28","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/NewCalendar.js":"29","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/GridComponent.js":"30","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/BlockedCard.js":"31","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/AgencyView.js":"32","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CompanyView.js":"33","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CompanyPlacementTable.js":"34"},{"size":434,"mtime":1607535137719,"results":"35","hashOfConfig":"36"},{"size":4143,"mtime":1608597215129,"results":"37","hashOfConfig":"36"},{"size":695,"mtime":1608573478528,"results":"38","hashOfConfig":"36"},{"size":548,"mtime":1607535137702,"results":"39","hashOfConfig":"36"},{"size":719,"mtime":1607535137711,"results":"40","hashOfConfig":"36"},{"size":832,"mtime":1607535137710,"results":"41","hashOfConfig":"36"},{"size":1638,"mtime":1608606479583,"results":"42","hashOfConfig":"36"},{"size":1016,"mtime":1607018667135,"results":"43","hashOfConfig":"36"},{"size":381,"mtime":1607535137714,"results":"44","hashOfConfig":"36"},{"size":18247,"mtime":1608605441440,"results":"45","hashOfConfig":"36"},{"size":8343,"mtime":1608573478522,"results":"46","hashOfConfig":"36"},{"size":2470,"mtime":1608604678623,"results":"47","hashOfConfig":"36"},{"size":7118,"mtime":1608573478525,"results":"48","hashOfConfig":"36"},{"size":82,"mtime":1607535137717,"results":"49","hashOfConfig":"36"},{"size":173,"mtime":1607535137709,"results":"50","hashOfConfig":"36"},{"size":6830,"mtime":1608573628203,"results":"51","hashOfConfig":"36"},{"size":1506,"mtime":1608573628205,"results":"52","hashOfConfig":"36"},{"size":436,"mtime":1607285155533,"results":"53","hashOfConfig":"36"},{"size":557,"mtime":1607535137704,"results":"54","hashOfConfig":"36"},{"size":12356,"mtime":1608573478515,"results":"55","hashOfConfig":"36"},{"size":13119,"mtime":1608573478516,"results":"56","hashOfConfig":"36"},{"size":3516,"mtime":1608573628209,"results":"57","hashOfConfig":"36"},{"size":4435,"mtime":1608573478529,"results":"58","hashOfConfig":"36"},{"size":8182,"mtime":1608573478527,"results":"59","hashOfConfig":"36"},{"size":8970,"mtime":1608573478529,"results":"60","hashOfConfig":"36"},{"size":6440,"mtime":1608599055143,"results":"61","hashOfConfig":"36"},{"size":11655,"mtime":1608573628206,"results":"62","hashOfConfig":"36"},{"size":4606,"mtime":1608606248196,"results":"63","hashOfConfig":"36"},{"size":9553,"mtime":1608606091183,"results":"64","hashOfConfig":"36"},{"size":1932,"mtime":1608423200675,"results":"65","hashOfConfig":"36"},{"size":2888,"mtime":1608573628202,"results":"66","hashOfConfig":"36"},{"size":144,"mtime":1608576316539,"results":"67","hashOfConfig":"36"},{"size":4538,"mtime":1608605856055,"results":"68","hashOfConfig":"36"},{"size":11642,"mtime":1608606544152,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"njrkyg",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/index.js",[],["145","146"],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/App.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/configureStore.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/Theme.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/UsersList.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/User.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/NavBar.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/services/auth.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/ProtectedRoute.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LoginForm.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/SignUpForm.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/auth/LogoutButton.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/authentication.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/config.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/SplashPage.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/Calendar.js",["147","148","149","150","151","152"],"import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport Header from \"./header\";\nimport { v4 as uuidv4 } from 'uuid';\nimport buildCalendar from './build';\nimport DayCard from './DayCard';\n\n\nexport default function Calendar({datesBlocked, placementDates, setDatesBlocked, }) {\n  console.log(\"*****************************Calendar: Entered calendar****************************\");\n  const [calendar, setCalendar] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(moment());\n  const [dateRange, setDateRange] = useState({ 'start': '', 'end':''})\n  const [blockedDatesChanged, setBlockedDatesChanged] = useState(false);\n\n  useEffect(() => {\n    setCalendar(buildCalendar(selectedDate));\n  }, [selectedDate]);\n\n  function isSelected(day) {\n    if (dateRange.start !== '') {\n      const start = dateRange.start;\n      const end = dateRange.end;\n      const currentDay = day;\n\n      const inRange = moment(currentDay).isAfter(start) && moment(currentDay).isBefore(end)\n      const isBorderDate = moment(currentDay).isSame(end) || moment(currentDay).isSame(start);\n\n      return(inRange || isBorderDate)\n    }\n  }\n\n  function dayInPlacements(day) {\n\n    for (let i=0; i < placementDates.length; i++) {\n       if (moment(day).isSame(placementDates[i], 'day')) {\n         return true;\n       }\n      }\n    return false;\n\n  }\n  function beforeToday(day) {\n    return moment(day).isBefore(new Date(), \"day\");\n  }\n\n  function isToday(day) {\n    return moment(new Date()).isSame(day, \"day\");\n  }\n\n  function dayStyles(day) {\n    //if (isSelected(day) || dayInBlocked(day)) {\n      if (dayInBlocked(day)) {\n        return \"selected\";\n    }\n\n    if (dayInPlacements(day)) {\n      return \"placement\";\n    }\n\n    if (beforeToday(day)) {\n      return \"before\";\n    }\n\n    if (isToday(day)) {\n      return \"today\";\n    }\n    return \"\";\n  }\n\n  // function currMonthName() {\n  //   return value.format(\"MMMM\");\n  // }\n\n  // function currYear() {\n  //   return value.format(\"YYYY\");\n  // }\n\n  const printDatesArray = (da) => {\n\n    for (let i = 0; i < da.length; i++) {\n      // console.log(da[i].format(\"MM/DD/YYYY\"))\n      console.log(da[i])\n    }\n  }\n  const addDateToBlocked = (start) => {\n    console.log(\"Adding \", start.format('MM/DD/YYYY'));\n    console.log(\"Before adding: \");\n    printDatesArray(datesBlocked);\n    if (!dayInBlocked(start)) {\n      let blocked = [ ...datesBlocked];\n      blocked.push(start);\n      setDatesBlocked(blocked);\n      setBlockedDatesChanged(true);\n      // console.log(\"After adding date to blocked: \")\n     //printDatesArray(datesBlocked);\n    }\n\n}\n\n  const removeDateBlocked = (day) => {\n      console.log(\"removeDateBlocked:  removing : \", day.format(\"MM/DD/YYYY\"), \" from blocked \");\n      let found = false;\n\n      for (let i=0; i < datesBlocked.length; i++) {\n        if (moment(day).isSame(datesBlocked[i], 'day')) {\n          console.log(\"Found : \", day.format(\"MM/DD/YYYY\"));\n          let newBlocked = [ ...datesBlocked]\n          newBlocked.splice(i, 1);\n          found = true;\n          console.log(\" Contents of newBlocked array after splice:  \");\n\n          setDatesBlocked([...newBlocked]);\n          printDatesArray(datesBlocked);\n          setBlockedDatesChanged(true);\n          break;\n        }\n      }\n      // latency issue - datesBlocked won't be updated until component is remapped???\n      // console.log(\"removeDateBlocked:  Updated datesBlocked array:  \");\n      // for (let i=0; i < datesBlocked.length; i++) {\n      //   console.log(\"     \", datesBlocked[i].format('MM/DD/YYYY'))\n      // }\n\n\n      if (!found) {\n        console.log(\"Failed to remove \", day.format('MM/DD/YY'), \" from \", datesBlocked)\n      }\n  }\n\n\n  function dayInBlocked(day) {\n\n    for (let i=0; i < datesBlocked.length; i++) {\n      //console.log(\"Calendar: dayInBlocked(\", day.format(\"MM/DD/YYYY\"), \" matches: \", datesBlocked[i].format(\"MM/DD/YYYY\"), \" : \", moment(day).isSame(datesBlocked[i], 'day'));\n      // console.log(\"datesBlocked[i] is a \", (typeof datesBlocked[i]));\n       if (moment(day).isSame(datesBlocked[i], 'day')) {\n         return true;\n       }\n      }\n    return false;\n  }\n\n  const addDateRangeToBlocked = (start, end) => {\n    //Only execute this function if the local state dateRange start and end have values\n    console.log(\"addDateRangeToBlocked: \", start.format('MM/DD/YYYY'), \" to \", end.format('MM/DD/YYYY'));\n    if (start !== '' && end !== '') {\n      addDateToBlocked(start);\n\n      const diff = start.diff(end, 'days');\n      console.log(\"Calendar: addDateRangeToBlocked: difference: \", diff);\n\n      if (diff > 1) {\n        for (let i=1; i < diff - 1; i++) {\n          let tmpDay = start;\n          tmpDay.add(i, 'day');\n          console.log(\"Calendar: addDateRangeToBlocked: Next day is:  \", tmpDay.format('MM/DD/YYYY'));\n          addDateToBlocked(tmpDay);\n        }\n        addDateToBlocked(end);\n        console.log(\"Calendar: addDateRangeToBlocked: New blocked dates:  \", datesBlocked);\n      }\n    }\n  }\n  function removeRangeFromBlocked(start, end) {\n    let thisDay = start;\n    while (!moment(thisDay).isSame(end, 'day')) {\n      removeDateBlocked(thisDay)\n      thisDay = moment(thisDay).add(1, 'days');\n    }\n    removeDateBlocked(thisDay) //remove the end date\n  }\n\n  function handleDateClicked(e, day) {\n    console.log(\"Day is: \", day)\n    printDatesArray(datesBlocked)\n    const today = moment();\n    if (day >= today.startOf('day')) {\n      if (!dayInPlacements(day)) {\n        if (!dayInBlocked(day)) {\n          addDateToBlocked(day)\n        } else if (dayInBlocked(day)) {\n          removeDateBlocked(day);\n        }\n      } else {\n        console.log(\"Placement found for that date. Cannot block.\")\n      }\n    } else {\n      console.log(\"Today endOf day compared with day is:  \", (day >= today.startOf('day')));\n    }\n  }\n\n  return (\n    <div className=\"calendar\">\n      <Header value={selectedDate} onChange={setSelectedDate} />\n\n      <div className=\"body\">\n        <div className=\"day-names\">\n          {[\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"].map((d) => {\n            const uuid = uuidv4();\n            return (<div className=\"week\"  key={uuid}>{d}</div>)\n          })}\n        </div>\n        {calendar.map((week, wi) => {\n          const uuid = uuidv4();\n           wi = wi+uuid;\n\n          return (\n          <div key={wi}>\n            {week.map((day, di) => {\n              di = di+uuid;\n              return (\n              <div\n                key={day.format()}\n                className=\"day\"\n                onClick={(e) => {handleDateClicked(e,day)}}\n              >\n                 <div className={dayStyles(day)}>\n                   {day.format(\"D\").toString()}\n                 </div>\n               </div>\n            )\n          })}\n          </div>\n        )})}\n      </div>\n    </div>\n  );\n}\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/header.js",["153"],"import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    gridColumnStart: 1,\n    gridColumnEnd: -1,\n  },\n  paper: {\n    // padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }\n}));\n\n\nexport default function CalendarHeader({ value, onChange }) {\n   const classes = useStyles();\n\n  function currMonthName() {\n    // console.log(\"Header : currMonthName()\")\n    return value.format(\"MMMM\");\n  }\n\n  function currYear() {\n    // console.log(\"Header : currYear()\");\n    return value.format(\"YYYY\");\n  }\n\n  function prevMonth() {\n    // console.log(\"Header : prevMonth()\")\n    return value.clone().subtract(1, \"month\");\n  }\n\n  function nextMonth() {\n    // console.log(\"Header : nextMonth()\")\n    return value.clone().add(1, \"month\");\n  }\n\n  function thisMonth() {\n    // console.log(\"Header : thisMonth()\")\n    return value.isSame(new Date(), \"month\");\n  }\n\n  return (\n\n\n      <div className=\"header\" width=\"1050px\">\n        <div\n          className=\"previous\"\n          onClick={() => !thisMonth() && onChange(prevMonth())}\n        >\n          <h1>{!thisMonth() ? String.fromCharCode(171) : null}</h1>\n        </div>\n        <div className=\"current\">\n          <h1>{currMonthName()} {currYear()}</h1>\n        </div>\n        <div className=\"next\" onClick={() => onChange(nextMonth())}>\n          <h1>{String.fromCharCode(187)}</h1>\n        </div>\n      </div>\n\n\n  );\n}\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/styles.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/build.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CompanyInfo.js",["154"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Alert from '@material-ui/lab/Alert'\nimport { Button,\n         DialogContent,\n         FormControl,\n         Grid,\n         InputLabel,\n         MenuItem,\n         Select,\n         Typography,\n        } from '@material-ui/core';\n\nimport { makeStyles  } from '@material-ui/core/styles';\nimport { addCompany, addCompanyContact, setCompanyId, setCompanyName, setCompanyContactName, setCompanyPhone, setCompanyEmail, setCompanyAddr1, setCompanyAddr2, setCompanyCity, setCompanyState, setCompanyZip} from '../store/company'\n\n\nconst CompanyInfo = ({authenticated}) => {\n  const userId = useSelector(state => state.authentication.userId);\n  console.log(\"User id is now set to:  \", userId);\n  console.log(\"Company Info:  Entered company info...\");\n  const dispatch = useDispatch();\n  const [errors, setErrors] = useState('');\n  const [state, setLocalState] = useState('');\n  const [values, setValues] = useState({\n    companyName: '',\n    name: '',\n    phone: '',\n    email: '',\n    addr1: '',\n    addr2: '',\n    city: '',\n    state: '',\n    zip: '',\n  });\n\n  const useStyles = makeStyles((theme) => ({\n    MuiGrid: {\n        width: \"80%\"\n    },\n    MuiDialogActions: {\n        justifyContent: \"space-around\"\n    },\n    img: {\n        display: \"block\",\n        width: \"40%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n    },\n    root: {\n        color: theme.primary,\n        input: {\n            textAlign: \"center\"\n        },\n        width: \"75%\",\n        justifyContent: 'space-between'\n    },\n  }));\n  const classes = useStyles();\n\n  const submit = async (e) => {\n    e.preventDefault();\n      let companyId = null;\n      const company = await addCompany(userId, values.companyName);\n      if (!company.errors) {\n        dispatch(setCompanyId(company.id));\n        companyId = company.id\n        dispatch(setCompanyName(company.companyName));\n        const companyContact = await addCompanyContact(companyId, values.companyName, values.name, values.phone, values.email, values.addr1, values.addr2, values.city, state, values.zip)\n\n        if (!companyContact.errors) {\n          dispatch(setCompanyName(companyContact.name));\n          dispatch(setCompanyPhone(companyContact.phone));\n          dispatch(setCompanyEmail(companyContact.email));\n          dispatch(setCompanyAddr1(companyContact.addr1));\n          dispatch(setCompanyAddr2(companyContact.addr2));\n          dispatch(setCompanyCity(companyContact.city));\n          dispatch(setCompanyState(companyContact.state));\n          dispatch(setCompanyZip(companyContact.zip));\n      } else {\n          setErrors(company.errors);\n      }\n    }\n  }\n  const cancel = () => {\n    console.log(\"CompanyInfo: cancel button pressed, should be redirecting to '/'\");\n    return <Redirect to=\"/\" />\n  }\n\n  const handleChange = (prop) => (event) => {\n    setValues({...values, [prop]: event.target.value});\n  }\n\n  //Because the select didn't work with handleChange at all\n  const handleStateChange = (event) => {\n    setLocalState(event.target.value);\n  };\n  // if (authenticated) {\n  //   alert(\"SignUpForm:  User is authenticated ... redirecting to '/'\");\n  //   return <Redirect to=\"/\" />;\n  // }\n\n//   if (window.localStorage.getItem(\"currentUser\")) {\n//     window.location.replace(\"/\");\n//   }\n  if (!userId) {\n    console.log(\"UserId is undefined: \", userId)\n    return null\n  } else {\n      return(\n          <>\n          <DialogContent style={{width:\"100%\", marginLeft:\"auto\", marginRight:\"auto\", justifyContent:\"center\"}}>\n          <Typography component=\"h6\" variant=\"h6\" align=\"center\" color=\"primary\" style={{marginTop: \"20px\", fontWeight:\"bold\"}}>Now for a little company information ...</Typography>\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\n            <div className={classes.root}>\n              {errors ? <Alert severity=\"error\">{errors}</Alert> : <div></div> }\n            </div>\n            <ValidatorForm\n                onSubmit={submit}\n                style={{width:\"75%\", justifyContent: \"center\"}}\n                >\n                   { errors ? <div className={classes.root}><Alert severity=\"error\">{errors}</Alert></div> : null}\n                <br />\n                <TextValidator\n                  variant=\"outlined\"\n                  label=\"Company Name\"\n                  onChange={handleChange('companyName')}\n                  name=\"companyName\"\n                  value={values.companyName}\n                  validators={['required']}\n                  errorMessages={['Company Name is required']}\n                  style={{width:\"100%\", justifyContent:\"center\"}}\n                />\n                <br />\n                <TextValidator\n                  variant=\"outlined\"\n                  label=\"Contact Name\"\n                  onChange={handleChange('name')}\n                  name=\"name\"\n                  value={values.name}\n                  validators={['required']}\n                  errorMessages={['Contact name is required']}\n                  style={{width:\"100%\", justifyContent:\"center\"}}\n                />\n                <br />\n                <TextValidator\n                  variant=\"outlined\"\n                  label=\"Phone\"\n                  onChange={handleChange('phone')}\n                  name=\"phone\"\n                  value={values.phone}\n                  validators={['required']}\n                  errorMessages={['Phone number is required']}\n                  style={{width:\"100%\", justifyContent:\"center\"}}\n                />\n                <br />\n                <TextValidator\n                  variant=\"outlined\"\n                  label=\"Contact Email\"\n                  onChange={handleChange('email')}\n                  name=\"email\"\n                  value={values.email}\n                  validators={['required', 'isEmail']}\n                  errorMessages={['Contact email is required', 'Contact email is not valid']}\n                  sttyle={{width:\"100%\", justifyContent:\"center\", marginRight:\"0px\"}}\n                />\n                <br />\n                <TextValidator\n                  variant=\"outlined\"\n                  label=\"Address 1\"\n                  onChange={handleChange('addr1')}\n                  name=\"addr1\"\n                  value={values.addr1}\n                  validators={['required']}\n                  errorMessages={['Street address is required']}\n                  style={{width:\"100%\", justifyContent:\"center\"}}\n                />\n                <br />\n                <TextValidator\n                  variant=\"outlined\"\n                  label=\"Address 2\"\n                  onChange={handleChange('addr2')}\n                  name=\"addr2\"\n                  value={values.addr2}\n                  style={{width:\"100%\", justifyContent:\"center\"}}\n                />\n                <br />\n                <TextValidator\n                  variant=\"outlined\"\n                  label=\"City\"\n                  onChange={handleChange('city')}\n                  name=\"city\"\n                  value={values.city}\n                  validators={['required']}\n                  errorMessages={['City is required']}\n                  style={{width:\"100%\", justifyContent:\"center\"}}\n                />\n                <br />\n                <FormControl variant=\"outlined\"  className={classes.formControl}>\n                  <InputLabel id=\"state\">State</InputLabel>\n                  <Select\n                    labelId=\"state\"\n                    id=\"state\"\n                    value={state}\n                    onChange={handleStateChange}\n                    // input={<BootstrapInput />}\n                    label=\"State\"\n                  >\n                  <MenuItem value=\"\"><em>None</em></MenuItem>\n                  <MenuItem value={\"AL\"}>AL</MenuItem>\n                  <MenuItem value={\"AK\"}>AK</MenuItem>\n                  <MenuItem value={\"AZ\"}>AZ</MenuItem>\n                  <MenuItem value={\"AR\"}>AR</MenuItem>\n                  <MenuItem value={\"CA\"}>CA</MenuItem>\n                  <MenuItem value={\"CO\"}>CO</MenuItem>\n                  <MenuItem value={\"CT\"}>CT</MenuItem>\n                  <MenuItem value={\"DE\"}>DE</MenuItem>\n                  <MenuItem value={\"FL\"}>FL</MenuItem>\n                  <MenuItem value={\"GA\"}>GA</MenuItem>\n                  <MenuItem value={\"HI\"}>HI</MenuItem>\n                  <MenuItem value={\"ID\"}>ID</MenuItem>\n                  <MenuItem value={\"IL\"}>IL</MenuItem>\n                  <MenuItem value={\"IN\"}>IN</MenuItem>\n                  <MenuItem value={\"IA\"}>IA</MenuItem>\n                  <MenuItem value={\"KS\"}>KS</MenuItem>\n                  <MenuItem value={\"KY\"}>KY</MenuItem>\n                  <MenuItem value={\"LA\"}>LA</MenuItem>\n                  <MenuItem value={\"ME\"}>ME</MenuItem>\n                  <MenuItem value={\"MD\"}>MD</MenuItem>\n                  <MenuItem value={\"MA\"}>MA</MenuItem>\n                  <MenuItem value={\"MI\"}>MI</MenuItem>\n                  <MenuItem value={\"MN\"}>MN</MenuItem>\n                  <MenuItem value={\"MS\"}>MS</MenuItem>\n                  <MenuItem value={\"MO\"}>MO</MenuItem>\n                  <MenuItem value={\"MT\"}>MT</MenuItem>\n                  <MenuItem value={\"NE\"}>NE</MenuItem>\n                  <MenuItem value={\"NV\"}>NV</MenuItem>\n                  <MenuItem value={\"NH\"}>NH</MenuItem>\n                  <MenuItem value={\"NJ\"}>NJ</MenuItem>\n                  <MenuItem value={\"NM\"}>NM</MenuItem>\n                  <MenuItem value={\"NY\"}>NY</MenuItem>\n                  <MenuItem value={\"NC\"}>NC</MenuItem>\n                  <MenuItem value={\"ND\"}>ND</MenuItem>\n                  <MenuItem value={\"OH\"}>OH</MenuItem>\n                  <MenuItem value={\"OK\"}>OK</MenuItem>\n                  <MenuItem value={\"OR\"}>OR</MenuItem>\n                  <MenuItem value={\"PA\"}>PA</MenuItem>\n                  <MenuItem value={\"RI\"}>RI</MenuItem>\n                  <MenuItem value={\"SC\"}>SC</MenuItem>\n                  <MenuItem value={\"SD\"}>SD</MenuItem>\n                  <MenuItem value={\"TN\"}>TN</MenuItem>\n                  <MenuItem value={\"TX\"}>TX</MenuItem>\n                  <MenuItem value={\"UT\"}>UT</MenuItem>\n                  <MenuItem value={\"VT\"}>VT</MenuItem>\n                  <MenuItem value={\"VA\"}>VA</MenuItem>\n                  <MenuItem value={\"WA\"}>WA</MenuItem>\n                  <MenuItem value={\"WV\"}>WV</MenuItem>\n                  <MenuItem value={\"WI\"}>WI</MenuItem>\n                  <MenuItem value={\"WY\"}>WY</MenuItem>\n                  </Select>\n              </FormControl>\n                <br />\n                <TextValidator\n                  variant=\"outlined\"\n                  label=\"Zip Code\"\n                  onChange={handleChange('zip')}\n                  name=\"zip\"\n                  value={values.zip}\n                  validators={['required']}\n                  errorMessages={['Zip Code is required']}\n                  style={{width:\"100%\", justifyContent:\"center\"}}\n                />\n                <br />\n                <br />\n                <Grid container item xs={10} style={{width:\"100%\", padding:\"0px\"}} >\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    type=\"submit\"\n                    style={{marginTop:\"20px\", justifyContent:\"flex-start\", marginBottom:\"20px\"}}\n                  >\n                    {\n                      ('Submit')\n                    }\n                  </Button>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    type=\"button\"\n                    className=\"cancel\"\n                    value=\"Submit without validation\"\n                    onClick={cancel}\n                    style={{marginTop:\"20px\", justifyContent:\"flex-end\", marginBottom:\"20px\", marginLeft:\"20%\", marginRight:\"0px\"}}\n                  >\n                    {\n                        ('Cancel')\n                    }\n                  </Button>\n                  </Grid>\n              </ValidatorForm>\n            </Grid>\n          </DialogContent>\n          </>\n      );\n  }\n}\n\n\nexport default CompanyInfo;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/ContractorInfo.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/blocked.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/placement.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/company.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/store/contractor.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/ContractorView.js",["155","156"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from \"moment\";\nimport { getAllBlocked, setBlocked, createBlocked } from '../store/blocked';\nimport { Button } from '@material-ui/core';\nimport { getContractorPlacements } from '../store/placement';\nimport  ContractorPlacementTable  from './ContractorPlacementTable';\nimport Calendar from './CalendarComponent/NewCalendar';\nimport { setContractorId } from '../store/contractor';\n\nconst ContractorView = () => {\n    console.log(\"Entered ContractorView\")\n    const dispatch = useDispatch();\n    const [datesBlocked, setDatesBlocked] = useState([]);\n    const contractorId = useSelector(state => state.contractor.contractorId);\n    const [placements, setPlacements] = useState([]);\n    const [placementDates, setPlacementDates] = useState([]);\n\n    function getDateRange(startDate, endDate) {\n        let start = moment(startDate).local();\n        let end = moment(endDate).local();\n        // console.log(\"Local start date:  \", start.format('MM/DD/YY hh:mm:ss'))\n\n        let diff = end.diff(start, 'days') + 1;\n        let thisDay = start.local().format('MM/DD/YYYY');\n        let range = [];\n        range.push(start)\n        for (let i = 1; i !== diff + 1; i++) {\n            let tmpDay = moment(thisDay).local();\n            range.push(tmpDay);\n            thisDay = tmpDay.add(1, 'day').format('MM/DD/YYYY hh:mm:ss')\n        }\n        // for (let i = 0; i < range.length; i++) {\n        //     console.log(\"range[\", i, \"]: \", range[i].format('MM/DD/YYYY hh:mm:ss'));\n        // }\n        return range;\n    }\n\n    useEffect (() => {\n        if (!contractorId) {\n            let cid = window.localStorage.getItem(\"contractorId\");\n            if (cid) {\n             dispatch(setContractorId(cid));\n            }\n        }\n        (async() => {\n            const blockedDates = await getAllBlocked(contractorId);\n            if (!blockedDates.errors) {\n                let bd = blockedDates[\"blockedDates\"]\n                const blockedArr = []\n                for (let i = 0; i < bd.length; i++) {\n                    // console.log(\"Received date blocked: \", bd[i].blocked)\n                    const date = bd[i].blocked.replace(\" GMT\", \"\")\n                    // console.log(\"date: \", date);\n                    // console.log(\"Tranforming into moment: \", moment(date).format('MM/DD/YYYY HH:mm:ss'));\n                    // console.log(\"Transforming into local : \", moment(bd[i].blocked).local());\n                    blockedArr.push(moment(date).local());\n                }\n                console.log(\"Blocked array in ContractorView: \")\n                for (let i = 0; i < blockedArr.length; i++) {\n                    console.log(\"     \", blockedArr[i].format('MM/DD/YYYY HH:mm:ss'));\n\n                }\n                setDatesBlocked(blockedArr);\n                dispatch(setBlocked(blockedArr));\n            } else {\n                console.log(\"ContractorView:  Error from getAllBlocked fetch call\");\n            }\n            console.log(\"Getting placements for this contractor\")\n            const p = await getContractorPlacements(contractorId);\n            if (!p.errors) {\n                const pa = p[\"placements\"];\n                const pd = []\n                const placementObj = [];\n                for (let j = 0; j < pa.length; j++) {\n                    console.log(\"Company Id:  \", pa[j].companyContact.id);\n                    console.log(\"CompanyName: \", pa[j].companyContact.companyName);\n                    placementObj.push({ \"companyId\": pa[j].companyContact.id,\n                                         \"companyName\": pa[j].companyContact.companyName,\n                                         \"contactName\": pa[j].companyContact.name,\n                                         \"contactEmail\": pa[j].companyContact.email,\n                                         \"contactPhone\": pa[j].companyContact.phone,\n                                         \"addr1\": pa[j].companyContact.addr1,\n                                         \"addr2\": pa[j].companyContact.addr2,\n                                         \"city\": pa[j].companyContact.city,\n                                         \"state\": pa[j].companyContact.state,\n                                         \"zip\": pa[j].companyContact.zip,\n                                         \"startDate\": pa[j].startDate,\n                                         \"endDate\": pa[j].endDate,\n                                         \"staffType\": pa[j].contractor.staffType })\n                    console.log(\"Placement[\",j, \"]:  start: \", pa[j].startDate, \" end: \", pa[j].endDate)\n                    if (pa[j].startDate === pa[j].endDate) {\n                        let temp =  moment(pa[j].startDate).local();\n                        pd.push(temp);\n                    } else {\n                        // takes strings, returns moments of local time.\n                        let dr = getDateRange(pa[j].startDate, pa[j].endDate)\n                        for (let i = 0; i < dr.length; i++) {\n                            pd.push(dr[i]);\n                        }\n                    }\n                }\n                setPlacements(placementObj);\n                setPlacementDates(pd);\n                console.log(\"Placement dates set:  \", placementDates);\n            } else {\n                console.log(\"Errors getting placements:  \", p.errors);\n            }\n        })();\n    }, [contractorId] )\n    const saveDates = async () => {\n        const blocked = createBlocked(contractorId, datesBlocked)\n        dispatch(setBlocked(datesBlocked));\n\n    }\n\n    if (!contractorId) {\n        console.log('Contractor Id is not set on login');\n        return null\n    } else {\n        return (\n            <>\n                <Calendar key={\"contrCalendar\"} datesBlocked={datesBlocked} placements={placements} placementDates={placementDates} setDatesBlocked={setDatesBlocked}></Calendar>\n                {/* <Calendar datesBlocked={datesBlocked} placements={placements} placementDates={placementDates} setDatesBlocked={setDatesBlocked}></Calendar> */}\n                <Button onClick={saveDates} style={{backgroundColor: \"#616161\", color: \"white\", marginTop:\"5px\", marginLeft:\"80%\"}}>SAVE</Button>\n                <ContractorPlacementTable placements={placements}></ContractorPlacementTable>\n            </>\n        );\n    }\n}\n\nexport default ContractorView;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/ContractorPlacementTable.js",["157","158","159","160"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport moment from 'moment';\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'companyName', numeric: false, disablePadding: true, label: 'Company Name' },\n  { id: 'contact', numeric: false, disablePadding: false, label: 'Contact' },\n  { id: 'phone', numeric: false, disablePadding: false, label: 'Phone' },\n  { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\n  { id: 'address', numeric: false, disablePadding: false, label: 'Address' },\n  { id: 'startDate', numeric: true, disablePadding: false, label: 'Start Date' },\n  { id: 'endDate', numeric: false, disablePadding: false, label: 'End Date' }\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Contractor Schedule\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    padding: '20px',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst ContractorPlacementTable = ({placements}) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  console.log(\"Placements: \", placements);\n\n  function createData(companyName, contact, phone, email, address, startDate, endDate) {\n      return { companyName, contact, phone, email, address, startDate, endDate };\n    }\n  const rows = [];\n  for (let i=0; i < placements.length; i++) {\n      let start = moment(placements[i].startDate).format('MM/DD/YYYY');\n      let end = moment(placements[i].endDate).format('MM/DD/YYYY');\n      let address = placements[i].addr1 + ', ' + placements[i].addr2 + ', ' +  placements[i].city + ', ' + placements[i].state + ', ' + placements[i].zip\n      rows.push(createData(\n        placements[i].companyName,\n        placements[i].contactName,\n        // placements[i].contactPhone,\n        '925-866-1111',\n        placements[i].contactEmail,\n        address,\n        start,\n        end, ));\n      }\n\n\n//   const rows = [\n//     createData('Foo', 305, 3.7, 67, 4.3),\n//     createData('Donut', 452, 25.0, 51, 4.9),\n//     createData('Eclair', 262, 16.0, 24, 6.0),\n//     createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//     createData('Gingerbread', 356, 16.0, 49, 3.9),\n//     createData('Honeycomb', 408, 3.2, 87, 6.5),\n//     createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//     createData('Jelly Bean', 375, 0.0, 94, 0.0),\n//     createData('KitKat', 518, 26.0, 65, 7.0),\n//     createData('Lollipop', 392, 0.2, 98, 0.0),\n//     createData('Marshmallow', 318, 0, 81, 2.0),\n//     createData('Nougat', 360, 19.0, 9, 37.0),\n//     createData('Oreo', 437, 18.0, 63, 4.0),\n//   ];\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} padding={\"none\"}/>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              paddingLeft=\"10px\"\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow key={index}>\n                      <TableCell align=\"left\">{row.companyName}</TableCell>\n                      <TableCell align=\"right\">{row.contact}</TableCell>\n                      <TableCell align=\"right\">{row.phone}</TableCell>\n                      <TableCell align=\"right\">{row.email}</TableCell>\n                      <TableCell align=\"right\">{row.address}</TableCell>\n                      <TableCell align=\"right\">{row.startDate}</TableCell>\n                      <TableCell align=\"right\">{row.endDate}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n\nexport default ContractorPlacementTable;\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/DayCard.js",["161","162","163","164","165","166"],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/NewCalendar.js",["167","168","169","170","171","172"],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/GridComponent.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CalendarComponent/BlockedCard.js",["173","174","175","176","177","178","179"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { requirePropFactory } from '@material-ui/core';\nimport moment from 'moment';\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"145px\",\n    height: \"100px\",\n    // width: \"150px\",\n    // height: \"150px\",\n    //display: \"grid\",\n    backgroundColor: \"#616161\",\n    color: \"white\",\n    // padding: \"2px\",\n    borderRadius: \"4px\",\n    // padding: \"10px\",\n    // paddingRight: \"0px\",\n    // margin: \"0px\",\n    // marginRight: \"0px\",\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    // marginBottom: 12,\n  },\n});\n\nexport default function BlockedCard({datesBlocked, placementDates, day, handleDateClicked}) {\n\n    const classes = useStyles();\n    function dayInPlacements(day) {\n\n        for (let i=0; i < placementDates.length; i++) {\n           if (moment(day).local().isSame(placementDates[i], 'day')) {\n             return true;\n           }\n          }\n        return false;\n\n      }\n      function beforeToday(day) {\n        return moment(day).local().isBefore(new Date(), \"day\");\n      }\n\n      function isToday(day) {\n        return moment(new Date()).isSame(day, \"day\").local();\n      }\n    const bull = <span className={classes.bullet}>•</span>;\n\n    function dayInBlocked(day) {\n\n        for (let i=0; i < datesBlocked.length; i++) {\n          //console.log(\"Calendar: dayInBlocked(\", day.format(\"MM/DD/YYYY\"), \" matches: \", datesBlocked[i].format(\"MM/DD/YYYY\"), \" : \", moment(day).isSame(datesBlocked[i], 'day'));\n          // console.log(\"datesBlocked[i] is a \", (typeof datesBlocked[i]));\n           if (moment(day).local().isSame(datesBlocked[i], 'day')) {\n             return true;\n           }\n          }\n        return false;\n      }\n    function dayStyles(day) {\n    //if (isSelected(day) || dayInBlocked(day)) {\n      if (dayInBlocked(day)) {\n        return \"selected\";\n    }\n\n    if (dayInPlacements(day)) {\n      return \"placement\";\n    }\n\n    if (beforeToday(day)) {\n      return \"before\";\n    }\n\n    if (isToday(day)) {\n      return \"today\";\n    }\n    return \"\";\n  }\nconst testHandler = (e, day) => {\n    alert('TestHandler clicked');\n}\nif (day) {\n  return (\n    <Card className={classes.root}>\n      <CardContent onClick={ (e) => handleDateClicked(e, day)}>\n        <div>{day.format(\"D\").toString()}</div>\n        <img src=\"blocked.png\" alt=\"Blocked Day\"></img>\n      </CardContent>\n    </Card>\n    // <div onClick={ (e) => handleDateClicked(e, day)}>{day.format(\"D\").toString()}</div>\n  );\n} else { return null }\n}\n","/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/AgencyView.js",[],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CompanyView.js",["180","181","182","183","184","185","186","187","188"],"/Users/marylark/Desktop/appacademy/Scheduler/react-app/src/components/CompanyPlacementTable.js",["189","190","191"],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":15},{"ruleId":"196","severity":1,"message":"200","line":13,"column":21,"nodeType":"198","messageId":"199","endLine":13,"endColumn":33},{"ruleId":"196","severity":1,"message":"201","line":14,"column":10,"nodeType":"198","messageId":"199","endLine":14,"endColumn":29},{"ruleId":"196","severity":1,"message":"202","line":20,"column":12,"nodeType":"198","messageId":"199","endLine":20,"endColumn":22},{"ruleId":"196","severity":1,"message":"203","line":144,"column":9,"nodeType":"198","messageId":"199","endLine":144,"endColumn":30},{"ruleId":"196","severity":1,"message":"204","line":165,"column":12,"nodeType":"198","messageId":"199","endLine":165,"endColumn":34},{"ruleId":"196","severity":1,"message":"205","line":19,"column":10,"nodeType":"198","messageId":"199","endLine":19,"endColumn":17},{"ruleId":"196","severity":1,"message":"206","line":17,"column":71,"nodeType":"198","messageId":"199","endLine":17,"endColumn":92},{"ruleId":"207","severity":1,"message":"208","line":110,"column":8,"nodeType":"209","endLine":110,"endColumn":22,"suggestions":"210"},{"ruleId":"196","severity":1,"message":"211","line":112,"column":15,"nodeType":"198","messageId":"199","endLine":112,"endColumn":22},{"ruleId":"196","severity":1,"message":"212","line":16,"column":8,"nodeType":"198","messageId":"199","endLine":16,"endColumn":16},{"ruleId":"196","severity":1,"message":"213","line":256,"column":9,"nodeType":"198","messageId":"199","endLine":256,"endColumn":20},{"ruleId":"196","severity":1,"message":"214","line":318,"column":25,"nodeType":"198","messageId":"199","endLine":318,"endColumn":39},{"ruleId":"196","severity":1,"message":"215","line":319,"column":25,"nodeType":"198","messageId":"199","endLine":319,"endColumn":32},{"ruleId":"196","severity":1,"message":"216","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":19},{"ruleId":"196","severity":1,"message":"217","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":14},{"ruleId":"196","severity":1,"message":"218","line":7,"column":8,"nodeType":"198","messageId":"199","endLine":7,"endColumn":18},{"ruleId":"196","severity":1,"message":"219","line":8,"column":10,"nodeType":"198","messageId":"199","endLine":8,"endColumn":28},{"ruleId":"196","severity":1,"message":"220","line":79,"column":14,"nodeType":"198","messageId":"199","endLine":79,"endColumn":23},{"ruleId":"196","severity":1,"message":"221","line":121,"column":7,"nodeType":"198","messageId":"199","endLine":121,"endColumn":18},{"ruleId":"222","severity":1,"message":"223","line":24,"column":5,"nodeType":"224","messageId":"225","endLine":24,"endColumn":24},{"ruleId":"196","severity":1,"message":"226","line":48,"column":10,"nodeType":"198","messageId":"199","endLine":48,"endColumn":19},{"ruleId":"196","severity":1,"message":"200","line":48,"column":21,"nodeType":"198","messageId":"199","endLine":48,"endColumn":33},{"ruleId":"196","severity":1,"message":"201","line":49,"column":10,"nodeType":"198","messageId":"199","endLine":49,"endColumn":29},{"ruleId":"227","severity":1,"message":"228","line":230,"column":98,"nodeType":"229","endLine":230,"endColumn":109},{"ruleId":"227","severity":1,"message":"228","line":237,"column":208,"nodeType":"229","endLine":237,"endColumn":219},{"ruleId":"196","severity":1,"message":"216","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":19},{"ruleId":"196","severity":1,"message":"217","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":14},{"ruleId":"196","severity":1,"message":"218","line":7,"column":8,"nodeType":"198","messageId":"199","endLine":7,"endColumn":18},{"ruleId":"196","severity":1,"message":"219","line":8,"column":10,"nodeType":"198","messageId":"199","endLine":8,"endColumn":28},{"ruleId":"196","severity":1,"message":"230","line":60,"column":11,"nodeType":"198","messageId":"199","endLine":60,"endColumn":15},{"ruleId":"196","severity":1,"message":"220","line":73,"column":14,"nodeType":"198","messageId":"199","endLine":73,"endColumn":23},{"ruleId":"196","severity":1,"message":"221","line":92,"column":7,"nodeType":"198","messageId":"199","endLine":92,"endColumn":18},{"ruleId":"196","severity":1,"message":"231","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":16},{"ruleId":"196","severity":1,"message":"232","line":7,"column":10,"nodeType":"198","messageId":"199","endLine":7,"endColumn":23},{"ruleId":"196","severity":1,"message":"233","line":7,"column":25,"nodeType":"198","messageId":"199","endLine":7,"endColumn":35},{"ruleId":"196","severity":1,"message":"234","line":7,"column":37,"nodeType":"198","messageId":"199","endLine":7,"endColumn":50},{"ruleId":"196","severity":1,"message":"235","line":18,"column":24,"nodeType":"198","messageId":"199","endLine":18,"endColumn":37},{"ruleId":"196","severity":1,"message":"236","line":19,"column":12,"nodeType":"198","messageId":"199","endLine":19,"endColumn":26},{"ruleId":"196","severity":1,"message":"237","line":19,"column":28,"nodeType":"198","messageId":"199","endLine":19,"endColumn":45},{"ruleId":"196","severity":1,"message":"238","line":21,"column":14,"nodeType":"198","messageId":"199","endLine":21,"endColumn":26},{"ruleId":"207","severity":1,"message":"239","line":77,"column":8,"nodeType":"209","endLine":77,"endColumn":19,"suggestions":"240"},{"ruleId":"196","severity":1,"message":"213","line":256,"column":9,"nodeType":"198","messageId":"199","endLine":256,"endColumn":20},{"ruleId":"196","severity":1,"message":"214","line":318,"column":25,"nodeType":"198","messageId":"199","endLine":318,"endColumn":39},{"ruleId":"196","severity":1,"message":"215","line":319,"column":25,"nodeType":"198","messageId":"199","endLine":319,"endColumn":32},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'DayCard' is defined but never used.","Identifier","unusedVar","'setDateRange' is assigned a value but never used.","'blockedDatesChanged' is assigned a value but never used.","'isSelected' is defined but never used.","'addDateRangeToBlocked' is assigned a value but never used.","'removeRangeFromBlocked' is defined but never used.","'classes' is assigned a value but never used.","'setCompanyContactName' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'placementDates'. Either include them or remove the dependency array.","ArrayExpression",["243"],"'blocked' is assigned a value but never used.","'Checkbox' is defined but never used.","'handleClick' is assigned a value but never used.","'isItemSelected' is assigned a value but never used.","'labelId' is assigned a value but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'requirePropFactory' is defined but never used.","'dayStyles' is defined but never used.","'testHandler' is assigned a value but never used.","no-dupe-keys","Duplicate key 'gridTemplateColumns'.","ObjectExpression","unexpected","'dateRange' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'bull' is assigned a value but never used.","'Calendar' is defined but never used.","'getAllBlocked' is defined but never used.","'setBlocked' is defined but never used.","'createBlocked' is defined but never used.","'setPlacements' is assigned a value but never used.","'placementDates' is assigned a value but never used.","'setPlacementDates' is assigned a value but never used.","'getDateRange' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["244"],"no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [contractorId, dispatch, placementDates]",{"range":"249","text":"250"},"Update the dependencies array to be: [companyId, dispatch]",{"range":"251","text":"252"},[5472,5486],"[contractorId, dispatch, placementDates]",[3548,3559],"[companyId, dispatch]"]